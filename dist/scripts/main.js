/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/css-loader/index.js!../node_modules/postcss-loader/lib/index.js??ref--5-2!../node_modules/less-loader/dist/cjs.js!./src/main.less":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/css-loader!../node_modules/postcss-loader/lib??ref--5-2!../node_modules/less-loader/dist/cjs.js!./src/main.less ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"* {\\n  margin: 0;\\n  padding: 0;\\n}\\nhtml,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n}\\nbody {\\n  max-width: 750px;\\n  margin: 0 auto;\\n}\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5sZXNzP2ZmNTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSw0QkFBNkIsY0FBYyxlQUFlLEdBQUcsZUFBZSxnQkFBZ0IsaUJBQWlCLEdBQUcsUUFBUSxxQkFBcUIsbUJBQW1CLEdBQUc7O0FBRW5LIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNS0yIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9tYWluLmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuaHRtbCxcXG5ib2R5IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5ib2R5IHtcXG4gIG1heC13aWR0aDogNzUwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/css-loader/index.js!../node_modules/postcss-loader/lib/index.js??ref--5-2!../node_modules/less-loader/dist/cjs.js!./src/main.less\n");

/***/ }),

/***/ "../node_modules/css-loader/lib/css-base.js":
/*!**************************************************!*\
  !*** ../node_modules/css-loader/lib/css-base.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzPzdiNGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQsSUFBSTtBQUNKO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsY0FBYzs7QUFFbEU7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/css-loader/lib/css-base.js\n");

/***/ }),

/***/ "../node_modules/style-loader/lib/addStyles.js":
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/style-loader/lib/addStyles.js\n");

/***/ }),

/***/ "../node_modules/style-loader/lib/urls.js":
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcz85NDMyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsV0FBVyxFQUFFO0FBQ3JELHdDQUF3QyxXQUFXLEVBQUU7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0Esc0NBQXNDO0FBQ3RDLEdBQUc7QUFDSDtBQUNBLDhEQUE4RDtBQUM5RDs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/style-loader/lib/urls.js\n");

/***/ }),

/***/ "./node_modules/.1.2.9@cax/dist/cax.js":
/*!*********************************************!*\
  !*** ./node_modules/.1.2.9@cax/dist/cax.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n *  cax v1.2.9\r\n *  By https://github.com/dntzhang \r\n *  Github: https://github.com/dntzhang/cax\r\n *  MIT Licensed.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 16);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _graphics = __webpack_require__(4);\n\nvar _graphics2 = _interopRequireDefault(_graphics);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Shape = function (_Graphics) {\n  _inherits(Shape, _Graphics);\n\n  function Shape() {\n    _classCallCheck(this, Shape);\n\n    return _possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));\n  }\n\n  _createClass(Shape, [{\n    key: 'draw',\n\n    // constructor() {\n    //     super()\n    // }\n\n    value: function draw() {}\n  }, {\n    key: 'render',\n    value: function render(ctx) {\n      this.clear();\n      this.draw();\n      _get(Shape.prototype.__proto__ || Object.getPrototypeOf(Shape.prototype), 'render', this).call(this, ctx);\n    }\n  }]);\n\n  return Shape;\n}(_graphics2.default);\n\nexports.default = Shape;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _displayObject = __webpack_require__(3);\n\nvar _displayObject2 = _interopRequireDefault(_displayObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Group = function (_DisplayObject) {\n  _inherits(Group, _DisplayObject);\n\n  function Group(data) {\n    _classCallCheck(this, Group);\n\n    var _this = _possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).call(this, data));\n\n    _this.children = [];\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: 'add',\n    value: function add(child) {\n      var len = arguments.length;\n\n      for (var i = 0; i < len; i++) {\n        var c = arguments[i];\n        var parent = c.parent;\n        if (parent) {\n          parent.removeChildAt(parent.children.indexOf(c));\n        }\n        this.children.push(c);\n        c.parent = this;\n      }\n    }\n  }, {\n    key: 'addChildAt',\n    value: function addChildAt(child, index) {\n      var par = child.parent;\n      par && par.removeChildAt(par.children.indexOf(child));\n      child.parent = this;\n      this.children.splice(index, 0, child);\n    }\n  }, {\n    key: 'removeChildAt',\n    value: function removeChildAt(index) {\n      var child = this.children[index];\n      if (child) {\n        child.parent = null;\n      }\n      this.children.splice(index, 1);\n    }\n  }, {\n    key: 'replace',\n    value: function replace(current, pre) {\n      var index = pre.parent.children.indexOf(pre);\n      this.removeChildAt(index);\n      this.addChildAt(current, index);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(child) {\n      var len = arguments.length;\n      var cLen = this.children.length;\n\n      for (var i = 0; i < len; i++) {\n        for (var j = 0; j < cLen; j++) {\n          if (child.id === this.children[j].id) {\n            child.parent = null;\n            this.children.splice(j, 1);\n            j--;\n            cLen--;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'empty',\n    value: function empty() {\n      this.children.forEach(function (child) {\n        child.parent = null;\n      });\n      this.children.length = 0;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.empty();\n      // Stage does not have a parent\n      this.parent && _get(Group.prototype.__proto__ || Object.getPrototypeOf(Group.prototype), 'destroy', this).call(this);\n    }\n  }]);\n\n  return Group;\n}(_displayObject2.default);\n\nexports.default = Group;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _displayObject = __webpack_require__(3);\n\nvar _displayObject2 = _interopRequireDefault(_displayObject);\n\nvar _util = __webpack_require__(9);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Bitmap = function (_DisplayObject) {\n  _inherits(Bitmap, _DisplayObject);\n\n  function Bitmap(img, onLoad) {\n    _classCallCheck(this, Bitmap);\n\n    var _this = _possibleConstructorReturn(this, (Bitmap.__proto__ || Object.getPrototypeOf(Bitmap)).call(this));\n\n    if (typeof img === 'string') {\n      if (Bitmap.cache[img]) {\n        if (_util2.default.isWeapp) {\n          _this.img = Bitmap.cache[img].img;\n          _this.rect = [0, 0, Bitmap.cache[img].width, Bitmap.cache[img].height];\n          _this.width = _this.rect[2];\n          _this.height = _this.rect[3];\n        } else {\n          _this.img = Bitmap.cache[img];\n          _this.rect = [0, 0, _this.img.width, _this.img.height];\n          _this.width = _this.img.width;\n          _this.height = _this.img.height;\n        }\n        onLoad && onLoad.call(_this);\n      } else if (_util2.default.isWeapp) {\n        _util2.default.getImageInWx(img, function (result) {\n          _this.img = result.img;\n          if (!_this.rect) {\n            _this.rect = [0, 0, result.width, result.height];\n          }\n          _this.width = result.width;\n          _this.height = result.height;\n          onLoad && onLoad.call(_this);\n          Bitmap.cache[img] = result;\n        });\n      } else {\n        _this.img = _util2.default.isWegame ? wx.createImage() : new window.Image();\n        _this.visible = false;\n        _this.img.onload = function () {\n          _this.visible = true;\n          if (!_this.rect) {\n            _this.rect = [0, 0, _this.img.width, _this.img.height];\n          }\n          _this.width = _this.img.width;\n          _this.height = _this.img.height;\n          onLoad && onLoad.call(_this);\n          Bitmap.cache[img] = _this.img;\n        };\n        _this.img.src = img;\n      }\n    } else {\n      _this.img = img;\n      _this.rect = [0, 0, img.width, img.height];\n      _this.width = img.width;\n      _this.height = img.height;\n      Bitmap.cache[img.src] = img;\n    }\n    return _this;\n  }\n\n  _createClass(Bitmap, [{\n    key: 'clone',\n    value: function clone() {\n      // 复制完img宽度0？？所以直接传字符串\n      var bitmap = new Bitmap(typeof this.img === 'string' ? this.img : this.img.src);\n      bitmap.x = this.x;\n      bitmap.y = this.y;\n      bitmap.scaleX = this.scaleX;\n      bitmap.scaleY = this.scaleY;\n      bitmap.rotation = this.rotation;\n      bitmap.skewX = this.skewX;\n      bitmap.skewY = this.skewY;\n      bitmap.originX = this.originX;\n      bitmap.originY = this.originY;\n      bitmap.width = this.width;\n      bitmap.height = this.height;\n      bitmap.cursor = this.cursor;\n\n      return bitmap;\n    }\n  }]);\n\n  return Bitmap;\n}(_displayObject2.default);\n\nBitmap.cache = {};\n\nexports.default = Bitmap;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix2d = __webpack_require__(21);\n\nvar _matrix2d2 = _interopRequireDefault(_matrix2d);\n\nvar _eventDispatcher = __webpack_require__(22);\n\nvar _eventDispatcher2 = _interopRequireDefault(_eventDispatcher);\n\nvar _uid = __webpack_require__(23);\n\nvar _uid2 = _interopRequireDefault(_uid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DisplayObject = function (_EventDispatcher) {\n  _inherits(DisplayObject, _EventDispatcher);\n\n  function DisplayObject() {\n    _classCallCheck(this, DisplayObject);\n\n    var _this = _possibleConstructorReturn(this, (DisplayObject.__proto__ || Object.getPrototypeOf(DisplayObject)).call(this));\n\n    _this.alpha = _this.complexAlpha = _this.scaleX = _this.scaleY = 1;\n    _this.x = _this.y = _this.rotation = _this.skewX = _this.skewY = _this.originX = _this.originY = 0;\n    _this.cursor = null;\n    _this.visible = true;\n    _this._matrix = new _matrix2d2.default();\n    _this._hitMatrix = new _matrix2d2.default();\n    _this.id = _uid2.default.get();\n    _this.clipGraphics = null;\n    _this.clipRuleNonzero = true;\n    _this.fixed = false;\n    _this.shadow = null;\n    _this.compositeOperation = null;\n    _this.absClipGraphics = null;\n    _this.absClipRuleNonzero = true;\n    _this.cacheUpdating = false;\n\n    try {\n      Object.defineProperties(_this, {\n        stage: { get: _this._getStage },\n        scale: {\n          get: function get() {\n            return this.scaleX;\n          },\n          set: function set(scale) {\n            this.scaleX = this.scaleY = scale;\n          }\n        }\n      });\n    } catch (e) {}\n    return _this;\n  }\n\n  _createClass(DisplayObject, [{\n    key: 'isVisible',\n    value: function isVisible() {\n      return this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0;\n    }\n  }, {\n    key: 'initAABB',\n    value: function initAABB() {\n      if (this.width === undefined || this.height === undefined) {\n        return;\n      }\n\n      var x = void 0,\n          y = void 0,\n          width = this.width,\n          height = this.height,\n          mtx = this._matrix,\n          xA = width * mtx.a,\n          xB = width * mtx.b,\n          yC = height * mtx.c,\n          yD = height * mtx.d,\n          tx = mtx.tx,\n          ty = mtx.ty,\n          minX = tx,\n          maxX = tx,\n          minY = ty,\n          maxY = ty;\n\n      if ((x = xA + tx) < minX) {\n        minX = x;\n      } else if (x > maxX) {\n        maxX = x;\n      }\n      if ((x = xA + yC + tx) < minX) {\n        minX = x;\n      } else if (x > maxX) {\n        maxX = x;\n      }\n      if ((x = yC + tx) < minX) {\n        minX = x;\n      } else if (x > maxX) {\n        maxX = x;\n      }\n      if ((y = xB + ty) < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      if ((y = xB + yD + ty) < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      if ((y = yD + ty) < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      this.AABB = [minX, minY, maxX - minX, maxY - minY];\n      this.rectPoints = [{\n        x: tx,\n        y: ty\n      }, {\n        x: xA + tx,\n        y: xB + ty\n      }, {\n        x: xA + yC + tx,\n        y: xB + yD + ty\n      }, {\n        x: yC + tx,\n        y: yD + ty\n      }];\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.parent.remove(this);\n    }\n  }, {\n    key: 'hover',\n    value: function hover(over, out, move) {\n      this.on('mouseover', over);\n      this.on('mouseout', out);\n      move && this.on('mousemove', move);\n    }\n\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/clip\n\n  }, {\n    key: 'clip',\n    value: function clip(graphics, notClipRuleNonzero) {\n      this.clipGraphics = graphics;\n      this.clipRuleNonzero = !notClipRuleNonzero;\n    }\n  }, {\n    key: 'unclip',\n    value: function unclip() {\n      this.clipGraphics = null;\n    }\n  }, {\n    key: 'absClip',\n    value: function absClip(graphics, notClipRuleNonzero) {\n      this.absClipGraphics = graphics;\n      this.absClipRuleNonzero = !notClipRuleNonzero;\n    }\n  }, {\n    key: 'unAbsClip',\n    value: function unAbsClip() {\n      this.absClipGraphics = null;\n    }\n  }, {\n    key: 'cache',\n    value: function cache(x, y, width, height, scale, cacheUpdating) {\n      this._cacheData = {\n        x: x || 0,\n        y: y || 0,\n        width: width || this.width,\n        height: height || this.height,\n        scale: scale || 1\n      };\n      this.cacheUpdating = cacheUpdating;\n      if (!this.cacheCanvas) {\n        if (typeof wx !== 'undefined' && wx.createCanvas) {\n          this.cacheCanvas = wx.createCanvas();\n        } else {\n          this.cacheCanvas = document.createElement('canvas');\n        }\n        this.cacheCtx = this.cacheCanvas.getContext('2d');\n      }\n      this.cacheCanvas.width = this._cacheData.width * this._cacheData.scale;\n      this.cacheCanvas.height = this._cacheData.height * this._cacheData.scale;\n\n      // debug cache canvas\n      // this.cacheCtx.fillRect(0,0,1000,1000)\n      this._readyToCache = true;\n    }\n  }, {\n    key: 'uncache',\n    value: function uncache() {\n      this.cacheCanvas = null;\n    }\n  }, {\n    key: 'filter',\n    value: function filter(filterName, filterBox) {\n      filterBox = Object.assign({}, {\n        x: 0,\n        y: 0,\n        width: this.width,\n        height: this.height\n      }, filterBox);\n      this.cache(filterBox.x, filterBox.y, filterBox.width, filterBox.height);\n      this._readyToFilter = true;\n      this._filterName = filterName;\n    }\n  }, {\n    key: 'setTransform',\n    value: function setTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, originX, originY) {\n      this.x = x || 0;\n      this.y = y || 0;\n      this.scaleX = scaleX == null ? 1 : scaleX;\n      this.scaleY = scaleY == null ? 1 : scaleY;\n      this.rotation = rotation || 0;\n      this.skewX = skewX || 0;\n      this.skewY = skewY || 0;\n      this.originX = originX || 0;\n      this.originY = originY || 0;\n    }\n  }, {\n    key: 'setMatrix',\n    value: function setMatrix(a, b, c, d, tx, ty) {\n      _matrix2d2.default.decompose(a, b, c, d, tx, ty, this);\n    }\n  }, {\n    key: 'unfilter',\n    value: function unfilter() {\n      this.uncache();\n    }\n  }, {\n    key: '_getStage',\n    value: function _getStage() {\n      var o = this;\n      while (o.parent) {\n        o = o.parent;\n      }\n      if (o.___instanceof === 'Stage') {\n        return o;\n      }\n      return null;\n    }\n  }]);\n\n  return DisplayObject;\n}(_eventDispatcher2.default);\n\nexports.default = DisplayObject;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _displayObject = __webpack_require__(3);\n\nvar _displayObject2 = _interopRequireDefault(_displayObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar assMap = {\n  fillStyle: true,\n  strokeStyle: true,\n  lineWidth: true,\n  lineCap: true,\n  lineDashOffset: true,\n  lineJoin: true,\n  miterLimit: true\n};\n\nvar Graphics = function (_DisplayObject) {\n  _inherits(Graphics, _DisplayObject);\n\n  function Graphics() {\n    _classCallCheck(this, Graphics);\n\n    var _this = _possibleConstructorReturn(this, (Graphics.__proto__ || Object.getPrototypeOf(Graphics)).call(this));\n\n    _this.cmds = [];\n    _this.currentGradient = null;\n    return _this;\n  }\n\n  _createClass(Graphics, [{\n    key: 'clearRect',\n    value: function clearRect() {\n      this.cmds.push(['clearRect', arguments]);\n      return this;\n    }\n  }, {\n    key: 'rect',\n    value: function rect() {\n      this.cmds.push(['rect', arguments]);\n      return this;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.cmds.length = 0;\n      return this;\n    }\n  }, {\n    key: 'setLineDash',\n    value: function setLineDash() {\n      this.cmds.push(['setLineDash', arguments]);\n      return this;\n    }\n  }, {\n    key: 'strokeRect',\n    value: function strokeRect() {\n      this.cmds.push(['strokeRect', arguments]);\n      return this;\n    }\n  }, {\n    key: 'fillRect',\n    value: function fillRect() {\n      this.cmds.push(['fillRect', arguments]);\n      return this;\n    }\n  }, {\n    key: 'beginPath',\n    value: function beginPath() {\n      this.cmds.push(['beginPath', arguments]);\n      return this;\n    }\n  }, {\n    key: 'arc',\n    value: function arc() {\n      this.cmds.push(['arc', arguments]);\n      return this;\n    }\n  }, {\n    key: 'closePath',\n    value: function closePath() {\n      this.cmds.push(['closePath', arguments]);\n      return this;\n    }\n  }, {\n    key: 'fillStyle',\n    value: function fillStyle() {\n      this.cmds.push(['fillStyle', arguments]);\n      return this;\n    }\n  }, {\n    key: 'fill',\n    value: function fill() {\n      this.cmds.push(['fill', arguments]);\n      return this;\n    }\n  }, {\n    key: 'strokeStyle',\n    value: function strokeStyle() {\n      this.cmds.push(['strokeStyle', arguments]);\n      return this;\n    }\n  }, {\n    key: 'lineWidth',\n    value: function lineWidth() {\n      this.cmds.push(['lineWidth', arguments]);\n      return this;\n    }\n  }, {\n    key: 'lineCap',\n    value: function lineCap() {\n      this.cmds.push(['lineCap', arguments]);\n      return this;\n    }\n  }, {\n    key: 'lineDashOffset',\n    value: function lineDashOffset() {\n      this.cmds.push(['lineDashOffset', arguments]);\n      return this;\n    }\n  }, {\n    key: 'lineJoin',\n    value: function lineJoin() {\n      this.cmds.push(['lineJoin', arguments]);\n      return this;\n    }\n  }, {\n    key: 'miterLimit',\n    value: function miterLimit() {\n      this.cmds.push(['miterLimit', arguments]);\n      return this;\n    }\n  }, {\n    key: 'stroke',\n    value: function stroke() {\n      this.cmds.push(['stroke', arguments]);\n      return this;\n    }\n  }, {\n    key: 'moveTo',\n    value: function moveTo() {\n      this.cmds.push(['moveTo', arguments]);\n      return this;\n    }\n  }, {\n    key: 'lineTo',\n    value: function lineTo() {\n      this.cmds.push(['lineTo', arguments]);\n      return this;\n    }\n  }, {\n    key: 'bezierCurveTo',\n    value: function bezierCurveTo() {\n      this.cmds.push(['bezierCurveTo', arguments]);\n      return this;\n    }\n  }, {\n    key: 'quadraticCurveTo',\n    value: function quadraticCurveTo() {\n      this.cmds.push(['quadraticCurveTo', arguments]);\n      return this;\n    }\n  }, {\n    key: 'createRadialGradient',\n    value: function createRadialGradient() {\n      this.cmds.push(['createRadialGradient', arguments]);\n      return this;\n    }\n  }, {\n    key: 'createLinearGradient',\n    value: function createLinearGradient() {\n      this.cmds.push(['createLinearGradient', arguments]);\n      return this;\n    }\n  }, {\n    key: 'addColorStop',\n    value: function addColorStop() {\n      this.cmds.push(['addColorStop', arguments]);\n      return this;\n    }\n  }, {\n    key: 'fillGradient',\n    value: function fillGradient() {\n      this.cmds.push(['fillGradient']);\n      return this;\n    }\n  }, {\n    key: 'arcTo',\n    value: function arcTo() {\n      this.cmds.push(['arcTo', arguments]);\n      return this;\n    }\n  }, {\n    key: 'render',\n    value: function render(ctx) {\n      var _this2 = this;\n\n      this.cmds.forEach(function (cmd) {\n        var methodName = cmd[0];\n        if (assMap[methodName]) {\n          ctx[methodName] = cmd[1][0];\n        } else if (methodName === 'addColorStop') {\n          _this2.currentGradient && _this2.currentGradient.addColorStop(cmd[1][0], cmd[1][1]);\n        } else if (methodName === 'fillGradient') {\n          ctx.fillStyle = _this2.currentGradient;\n        } else {\n          var result = ctx[methodName].apply(ctx, Array.prototype.slice.call(cmd[1]));\n          if (methodName === 'createRadialGradient' || methodName === 'createLinearGradient') {\n            _this2.currentGradient = result;\n          }\n        }\n      });\n    }\n  }]);\n\n  return Graphics;\n}(_displayObject2.default);\n\nexports.default = Graphics;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _displayObject = __webpack_require__(3);\n\nvar _displayObject2 = _interopRequireDefault(_displayObject);\n\nvar _util = __webpack_require__(9);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar measureCtx = void 0;\n\nif (_util2.default.isWeapp) {\n  measureCtx = wx.createCanvasContext('measure0');\n} else if (typeof document !== 'undefined') {\n  measureCtx = document.createElement('canvas').getContext('2d');\n}\n\nvar Text = function (_DisplayObject) {\n  _inherits(Text, _DisplayObject);\n\n  function Text(text, option) {\n    _classCallCheck(this, Text);\n\n    var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));\n\n    _this.text = text;\n    option = option || {};\n    _this.font = option.font || '10px sans-serif';\n    _this.color = option.color || 'black';\n    _this.textAlign = option.textAlign || 'left';\n    _this.baseline = option.baseline || 'top';\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: 'getWidth',\n    value: function getWidth() {\n      if (!measureCtx) {\n        if (_util2.default.isWegame) {\n          measureCtx = wx.createCanvas().getContext('2d');\n        }\n      }\n\n      if (this.font) {\n        measureCtx.font = this.font;\n      }\n      return measureCtx.measureText(this.text).width;\n    }\n  }]);\n\n  return Text;\n}(_displayObject2.default);\n\nexports.default = Text;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _displayObject = __webpack_require__(3);\n\nvar _displayObject2 = _interopRequireDefault(_displayObject);\n\nvar _util = __webpack_require__(9);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _bitmap = __webpack_require__(2);\n\nvar _bitmap2 = _interopRequireDefault(_bitmap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Sprite = function (_DisplayObject) {\n  _inherits(Sprite, _DisplayObject);\n\n  function Sprite(option) {\n    _classCallCheck(this, Sprite);\n\n    var _this = _possibleConstructorReturn(this, (Sprite.__proto__ || Object.getPrototypeOf(Sprite)).call(this));\n\n    _this.option = option;\n    var len = _this.option.imgs.length;\n    var count = 0;\n    var firstImg = _this.option.imgs[0];\n    _this.imgMap = {};\n\n    if (_util2.default.isWeapp) {\n      _this.option.imgs.forEach(function (img) {\n        _util2.default.getImageInWx(img, function (result) {\n          _this.imgMap[img] = result.img;\n          count++;\n          if (count === len) {\n            _this.img = _this.imgMap[firstImg];\n            _this.rect = [0, 0, 0, 0];\n          }\n        });\n      });\n    } else {\n      if (typeof firstImg === 'string') {\n        var _len = _this.option.imgs.length;\n        var loadedCount = 0;\n        _this.option.imgs.forEach(function (src) {\n          if (_bitmap2.default.cache[src]) {\n            _this.imgMap[src] = _bitmap2.default.cache[src];\n            loadedCount++;\n            if (loadedCount === _len) {\n              _this.img = _this.imgMap[firstImg];\n              _this.rect = [0, 0, 0, 0];\n            }\n          } else {\n            var img = _util2.default.isWegame ? wx.createImage() : new window.Image();\n            img.onload = function () {\n              _this.imgMap[src] = img;\n              loadedCount++;\n              if (loadedCount === _len) {\n                _this.img = _this.imgMap[firstImg];\n                _this.rect = [0, 0, 0, 0];\n              }\n              _bitmap2.default.cache[src] = img;\n            };\n            img.src = src;\n          }\n        });\n      } else if (firstImg instanceof _bitmap2.default) {\n        _this.rect = [0, 0, 0, 0];\n        _this.img = firstImg.img;\n      } else {\n        _this.rect = [0, 0, 0, 0];\n        _this.img = firstImg;\n      }\n    }\n\n    _this.x = option.x || 0;\n    _this.y = option.y || 0;\n    _this.currentFrameIndex = 0;\n    _this.animationFrameIndex = 0;\n    _this.currentAnimation = option.currentAnimation || null;\n\n    _this.interval = 1e3 / option.framerate;\n\n    _this.paused = false;\n    _this.animationEnd = option.animationEnd || function () {};\n    if (_this.currentAnimation) {\n      if (option.playOnce) {\n        _this.gotoAndPlayOnce(_this.currentAnimation);\n      } else {\n        _this.gotoAndPlay(_this.currentAnimation);\n      }\n    }\n    return _this;\n  }\n\n  _createClass(Sprite, [{\n    key: 'play',\n    value: function play() {\n      this.paused = false;\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.paused = true;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.currentFrameIndex = 0;\n      this.animationFrameIndex = 0;\n    }\n  }, {\n    key: 'updateFrame',\n    value: function updateFrame() {\n      if (!this.paused) {\n        var opt = this.option;\n        this.dt = Date.now() - this.startTime;\n        var frames = opt.animations[this.currentAnimation].frames;\n        var len = frames.length;\n        var index = Math.floor(this.dt / this.interval % len);\n        this.rect = opt.frames[frames[index]];\n        var rectLen = this.rect.length;\n\n        rectLen > 4 && (this.originX = this.rect[2] * this.rect[4]);\n        rectLen > 5 && (this.originY = this.rect[3] * this.rect[5]);\n        if (rectLen > 6) {\n          var img = this.option.imgs[this.rect[6]];\n          this.img = typeof img === 'string' ? this.imgMap[img] : img;\n        }\n\n        if (index === len - 1 && (!this.endTime || Date.now() - this.endTime > this.interval)) {\n          this.endTime = Date.now();\n          this.animationEnd();\n          if (this._willDestroy) {\n            this.destroy();\n          }\n        }\n      }\n    }\n  }, {\n    key: 'gotoAndPlay',\n    value: function gotoAndPlay(animation) {\n      this.paused = false;\n      this.reset();\n      this.currentAnimation = animation;\n      this.startTime = Date.now();\n    }\n  }, {\n    key: 'gotoAndStop',\n    value: function gotoAndStop(animation) {\n      this.reset();\n      this.paused = true;\n      this.currentAnimation = animation;\n      var opt = this.option;\n      var frames = opt.animations[this.currentAnimation].frames;\n      this.rect = opt.frames[frames[this.animationFrameIndex]];\n      var rect = this.rect;\n      this.width = rect[2];\n      this.height = rect[3];\n      var rectLen = rect.length;\n      rectLen > 4 && (this.originX = rect[2] * rect[4]);\n      rectLen > 5 && (this.originY = rect[3] * rect[5]);\n      if (rectLen > 6) {\n        var img = this.option.imgs[rect[6]];\n        this.img = typeof img === 'string' ? this.imgMap[img] : img;\n      }\n    }\n  }, {\n    key: 'gotoAndPlayOnce',\n    value: function gotoAndPlayOnce(animation) {\n      this.gotoAndPlay(animation);\n      this._willDestroy = true;\n    }\n  }]);\n\n  return Sprite;\n}(_displayObject2.default);\n\nexports.default = Sprite;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Event = function () {\n  function Event() {\n    _classCallCheck(this, Event);\n\n    this.propagationStopped = false;\n    this.stageX = null;\n    this.stageY = null;\n    this.pureEvent = null;\n  }\n\n  _createClass(Event, [{\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.propagationStopped = true;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.pureEvent.preventDefault();\n    }\n  }]);\n\n  return Event;\n}();\n\nexports.default = Event;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Render = function () {\n  function Render() {\n    _classCallCheck(this, Render);\n  }\n\n  _createClass(Render, [{\n    key: \"render\",\n    value: function render() {}\n  }, {\n    key: \"renderGraphics\",\n    value: function renderGraphics() {}\n  }, {\n    key: \"clear\",\n    value: function clear() {}\n  }]);\n\n  return Render;\n}();\n\nexports.default = Render;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getImageInWx = getImageInWx;\nfunction getImageInWx(img, callback) {\n  if (img.indexOf('https://') === -1 && img.indexOf('http://') === -1 || img.indexOf('http://tmp/') === 0) {\n    wx.getImageInfo({\n      src: img,\n      success: function success(info) {\n        callback({\n          img: img,\n          width: info.width,\n          height: info.height\n        });\n      }\n    });\n  } else {\n    wx.downloadFile({\n      url: img,\n      success: function success(res) {\n        if (res.statusCode === 200) {\n          wx.getImageInfo({\n            src: res.tempFilePath,\n            success: function success(info) {\n              callback({\n                img: res.tempFilePath,\n                width: info.width,\n                height: info.height\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n}\n\nfunction getGlobal() {\n  if ((typeof global === 'undefined' ? 'undefined' : _typeof(global)) !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n    if (typeof self !== 'undefined') {\n      return self;\n    } else if (typeof window !== 'undefined') {\n      return window;\n    } else if (typeof global !== 'undefined') {\n      return global;\n    }\n    return function () {\n      return this;\n    }();\n  }\n  return global;\n}\n\nvar root = getGlobal();\n\nexports.default = {\n  getImageInWx: getImageInWx,\n  root: root,\n  isWeapp: typeof wx !== 'undefined' && !wx.createCanvas,\n  isWegame: typeof wx !== 'undefined' && wx.createCanvas\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Tween.js - Licensed under the MIT license\r\n * https://github.com/tweenjs/tween.js\r\n * ----------------------------------------------\r\n *\r\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\r\n * Thank you all, you're awesome!\r\n */\n\nvar _Group = function _Group() {\n  this._tweens = {};\n  this._tweensAddedDuringUpdate = {};\n};\n\n_Group.prototype = {\n  getAll: function getAll() {\n    return Object.keys(this._tweens).map(function (tweenId) {\n      return this._tweens[tweenId];\n    }.bind(this));\n  },\n\n  removeAll: function removeAll() {\n    this._tweens = {};\n  },\n\n  add: function add(tween) {\n    this._tweens[tween.getId()] = tween;\n    this._tweensAddedDuringUpdate[tween.getId()] = tween;\n  },\n\n  remove: function remove(tween) {\n    delete this._tweens[tween.getId()];\n    delete this._tweensAddedDuringUpdate[tween.getId()];\n  },\n\n  update: function update(time, preserve) {\n    var tweenIds = Object.keys(this._tweens);\n\n    if (tweenIds.length === 0) {\n      return false;\n    }\n\n    time = time !== undefined ? time : TWEEN.now();\n\n    // Tweens are updated in \"batches\". If you add a new tween during an update, then the\n    // new tween will be updated in the next batch.\n    // If you remove a tween during an update, it may or may not be updated. However,\n    // if the removed tween was added during the current batch, then it will not be updated.\n    while (tweenIds.length > 0) {\n      this._tweensAddedDuringUpdate = {};\n\n      for (var i = 0; i < tweenIds.length; i++) {\n        var tween = this._tweens[tweenIds[i]];\n\n        if (tween && tween.update(time) === false) {\n          tween._isPlaying = false;\n\n          if (!preserve) {\n            delete this._tweens[tweenIds[i]];\n          }\n        }\n      }\n\n      tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n    }\n\n    return true;\n  }\n};\n\nvar TWEEN = new _Group();\n\nTWEEN.Group = _Group;\nTWEEN._nextId = 0;\nTWEEN.nextId = function () {\n  return TWEEN._nextId++;\n};\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof window === 'undefined' && typeof process !== 'undefined') {\n  if (typeof wx !== 'undefined') {\n    TWEEN.now = Date.now;\n  } else {\n    TWEEN.now = function () {\n      var time = process.hrtime();\n\n      // Convert [seconds, nanoseconds] to milliseconds.\n      return time[0] * 1000 + time[1] / 1000000;\n    };\n  }\n} else if (typeof window !== 'undefined' &&\n// In a browser, use window.performance.now if it is available.\nwindow.performance !== undefined && window.performance.now !== undefined) {\n  // This must be bound, because directly assigning this function\n  // leads to an invocation exception in Chrome.\n  TWEEN.now = window.performance.now.bind(window.performance);\n} else if (Date.now !== undefined) {\n  // Use Date.now if it is available.\n  TWEEN.now = Date.now;\n} else {\n  // Otherwise, use 'new Date().getTime()'.\n  TWEEN.now = function () {\n    return new Date().getTime();\n  };\n}\n\nTWEEN.Tween = function (object, group) {\n  this._object = object;\n  this._valuesStart = {};\n  this._valuesEnd = {};\n  this._valuesStartRepeat = {};\n  this._duration = 1000;\n  this._repeat = 0;\n  this._repeatDelayTime = undefined;\n  this._yoyo = false;\n  this._isPlaying = false;\n  this._reversed = false;\n  this._delayTime = 0;\n  this._startTime = null;\n  this._easingFunction = TWEEN.Easing.Linear.None;\n  this._interpolationFunction = TWEEN.Interpolation.Linear;\n  this._chainedTweens = [];\n  this._onStartCallback = null;\n  this._onStartCallbackFired = false;\n  this._onUpdateCallback = null;\n  this._onCompleteCallback = null;\n  this._onStopCallback = null;\n  this._group = group || TWEEN;\n  this._id = TWEEN.nextId();\n\n  this._paused = false;\n  this._passTime = null;\n};\n\nTWEEN.Tween.prototype = {\n  getId: function getId() {\n    return this._id;\n  },\n\n  toggle: function toggle() {\n    if (this._paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  },\n\n\n  pause: function pause() {\n    this._paused = true;\n    var pauseTime = TWEEN.now();\n    this._passTime = pauseTime - this._startTime;\n  },\n\n  play: function play() {\n    this._paused = false;\n    var nowTime = TWEEN.now();\n    this._startTime = nowTime - this._passTime;\n  },\n\n  isPlaying: function isPlaying() {\n    return this._isPlaying;\n  },\n\n  to: function to(properties, duration) {\n    this._valuesEnd = properties;\n\n    if (duration !== undefined) {\n      this._duration = duration;\n    }\n\n    return this;\n  },\n\n  start: function start(time) {\n    this._group.add(this);\n\n    this._isPlaying = true;\n\n    this._onStartCallbackFired = false;\n\n    this._startTime = time !== undefined ? typeof time === 'string' ? TWEEN.now() + parseFloat(time) : time : TWEEN.now();\n    this._startTime += this._delayTime;\n\n    for (var property in this._valuesEnd) {\n      // Check if an Array was provided as property value\n      if (this._valuesEnd[property] instanceof Array) {\n        if (this._valuesEnd[property].length === 0) {\n          continue;\n        }\n\n        // Create a local copy of the Array with the start value at the front\n        this._valuesEnd[property] = [this._object[property]].concat(this._valuesEnd[property]);\n      }\n\n      // If `to()` specifies a property that doesn't exist in the source object,\n      // we should not set that property in the object\n      if (this._object[property] === undefined) {\n        continue;\n      }\n\n      // Save the starting value.\n      this._valuesStart[property] = this._object[property];\n\n      if (this._valuesStart[property] instanceof Array === false) {\n        this._valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n      }\n\n      this._valuesStartRepeat[property] = this._valuesStart[property] || 0;\n    }\n\n    return this;\n  },\n\n  stop: function stop() {\n    if (!this._isPlaying) {\n      return this;\n    }\n\n    this._group.remove(this);\n    this._isPlaying = false;\n\n    if (this._onStopCallback !== null) {\n      this._onStopCallback(this._object);\n    }\n\n    this.stopChainedTweens();\n    return this;\n  },\n\n  end: function end() {\n    this.update(this._startTime + this._duration);\n    return this;\n  },\n\n  stopChainedTweens: function stopChainedTweens() {\n    for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n      this._chainedTweens[i].stop();\n    }\n  },\n\n  group: function group(group) {\n    this._group = group;\n    return this;\n  },\n\n  delay: function delay(amount) {\n    this._delayTime = amount;\n    return this;\n  },\n\n  repeat: function repeat(times) {\n    this._repeat = times;\n    return this;\n  },\n\n  repeatDelay: function repeatDelay(amount) {\n    this._repeatDelayTime = amount;\n    return this;\n  },\n\n  yoyo: function yoyo(yy) {\n    this._yoyo = yy;\n    return this;\n  },\n\n  easing: function easing(eas) {\n    this._easingFunction = eas;\n    return this;\n  },\n\n  interpolation: function interpolation(inter) {\n    this._interpolationFunction = inter;\n    return this;\n  },\n\n  chain: function chain() {\n    this._chainedTweens = arguments;\n    return this;\n  },\n\n  onStart: function onStart(callback) {\n    this._onStartCallback = callback;\n    return this;\n  },\n\n  onUpdate: function onUpdate(callback) {\n    this._onUpdateCallback = callback;\n    return this;\n  },\n\n  onComplete: function onComplete(callback) {\n    this._onCompleteCallback = callback;\n    return this;\n  },\n\n  onStop: function onStop(callback) {\n    this._onStopCallback = callback;\n    return this;\n  },\n\n  update: function update(time) {\n    if (this._paused) return true;\n    var property;\n    var elapsed;\n    var value;\n\n    if (time < this._startTime) {\n      return true;\n    }\n\n    if (this._onStartCallbackFired === false) {\n      if (this._onStartCallback !== null) {\n        this._onStartCallback(this._object);\n      }\n\n      this._onStartCallbackFired = true;\n    }\n\n    elapsed = (time - this._startTime) / this._duration;\n    elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n\n    value = this._easingFunction(elapsed);\n\n    for (property in this._valuesEnd) {\n      // Don't update properties that do not exist in the source object\n      if (this._valuesStart[property] === undefined) {\n        continue;\n      }\n\n      var start = this._valuesStart[property] || 0;\n      var end = this._valuesEnd[property];\n\n      if (end instanceof Array) {\n        this._object[property] = this._interpolationFunction(end, value);\n      } else {\n        // Parses relative end values with start as base (e.g.: +10, -3)\n        if (typeof end === 'string') {\n          if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            end = start + parseFloat(end);\n          } else {\n            end = parseFloat(end);\n          }\n        }\n\n        // Protect against non numeric properties.\n        if (typeof end === 'number') {\n          this._object[property] = start + (end - start) * value;\n        }\n      }\n    }\n\n    if (this._onUpdateCallback !== null) {\n      this._onUpdateCallback(this._object);\n    }\n\n    if (elapsed === 1) {\n      if (this._repeat > 0) {\n        if (isFinite(this._repeat)) {\n          this._repeat--;\n        }\n\n        // Reassign starting values, restart by making startTime = now\n        for (property in this._valuesStartRepeat) {\n          if (typeof this._valuesEnd[property] === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n          }\n\n          if (this._yoyo) {\n            var tmp = this._valuesStartRepeat[property];\n\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n            this._valuesEnd[property] = tmp;\n          }\n\n          this._valuesStart[property] = this._valuesStartRepeat[property];\n        }\n\n        if (this._yoyo) {\n          this._reversed = !this._reversed;\n        }\n\n        if (this._repeatDelayTime !== undefined) {\n          this._startTime = time + this._repeatDelayTime;\n        } else {\n          this._startTime = time + this._delayTime;\n        }\n\n        return true;\n      } else {\n        if (this._onCompleteCallback !== null) {\n          this._onCompleteCallback(this._object);\n        }\n\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n          // Make the chained tweens start exactly at the time they should,\n          // even if the `update()` method was called way past the duration of the tween\n          this._chainedTweens[i].start(this._startTime + this._duration);\n        }\n\n        return false;\n      }\n    }\n\n    return true;\n  }\n};\n\nTWEEN.Easing = {\n\n  Linear: {\n\n    None: function None(k) {\n      return k;\n    }\n\n  },\n\n  Quadratic: {\n\n    In: function In(k) {\n      return k * k;\n    },\n\n    Out: function Out(k) {\n      return k * (2 - k);\n    },\n\n    InOut: function InOut(k) {\n      if ((k *= 2) < 1) {\n        return 0.5 * k * k;\n      }\n\n      return -0.5 * (--k * (k - 2) - 1);\n    }\n\n  },\n\n  Cubic: {\n\n    In: function In(k) {\n      return k * k * k;\n    },\n\n    Out: function Out(k) {\n      return --k * k * k + 1;\n    },\n\n    InOut: function InOut(k) {\n      if ((k *= 2) < 1) {\n        return 0.5 * k * k * k;\n      }\n\n      return 0.5 * ((k -= 2) * k * k + 2);\n    }\n\n  },\n\n  Quartic: {\n\n    In: function In(k) {\n      return k * k * k * k;\n    },\n\n    Out: function Out(k) {\n      return 1 - --k * k * k * k;\n    },\n\n    InOut: function InOut(k) {\n      if ((k *= 2) < 1) {\n        return 0.5 * k * k * k * k;\n      }\n\n      return -0.5 * ((k -= 2) * k * k * k - 2);\n    }\n\n  },\n\n  Quintic: {\n\n    In: function In(k) {\n      return k * k * k * k * k;\n    },\n\n    Out: function Out(k) {\n      return --k * k * k * k * k + 1;\n    },\n\n    InOut: function InOut(k) {\n      if ((k *= 2) < 1) {\n        return 0.5 * k * k * k * k * k;\n      }\n\n      return 0.5 * ((k -= 2) * k * k * k * k + 2);\n    }\n\n  },\n\n  Sinusoidal: {\n\n    In: function In(k) {\n      return 1 - Math.cos(k * Math.PI / 2);\n    },\n\n    Out: function Out(k) {\n      return Math.sin(k * Math.PI / 2);\n    },\n\n    InOut: function InOut(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n  },\n\n  Exponential: {\n\n    In: function In(k) {\n      return k === 0 ? 0 : Math.pow(1024, k - 1);\n    },\n\n    Out: function Out(k) {\n      return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n    },\n\n    InOut: function InOut(k) {\n      if (k === 0) {\n        return 0;\n      }\n\n      if (k === 1) {\n        return 1;\n      }\n\n      if ((k *= 2) < 1) {\n        return 0.5 * Math.pow(1024, k - 1);\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n    }\n\n  },\n\n  Circular: {\n\n    In: function In(k) {\n      return 1 - Math.sqrt(1 - k * k);\n    },\n\n    Out: function Out(k) {\n      return Math.sqrt(1 - --k * k);\n    },\n\n    InOut: function InOut(k) {\n      if ((k *= 2) < 1) {\n        return -0.5 * (Math.sqrt(1 - k * k) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n    }\n\n  },\n\n  Elastic: {\n\n    In: function In(k) {\n      if (k === 0) {\n        return 0;\n      }\n\n      if (k === 1) {\n        return 1;\n      }\n\n      return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n    },\n\n    Out: function Out(k) {\n      if (k === 0) {\n        return 0;\n      }\n\n      if (k === 1) {\n        return 1;\n      }\n\n      return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n    },\n\n    InOut: function InOut(k) {\n      if (k === 0) {\n        return 0;\n      }\n\n      if (k === 1) {\n        return 1;\n      }\n\n      k *= 2;\n\n      if (k < 1) {\n        return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n      }\n\n      return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n    }\n\n  },\n\n  Back: {\n\n    In: function In(k) {\n      var s = 1.70158;\n\n      return k * k * ((s + 1) * k - s);\n    },\n\n    Out: function Out(k) {\n      var s = 1.70158;\n\n      return --k * k * ((s + 1) * k + s) + 1;\n    },\n\n    InOut: function InOut(k) {\n      var s = 1.70158 * 1.525;\n\n      if ((k *= 2) < 1) {\n        return 0.5 * (k * k * ((s + 1) * k - s));\n      }\n\n      return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n    }\n\n  },\n\n  Bounce: {\n\n    In: function In(k) {\n      return 1 - TWEEN.Easing.Bounce.Out(1 - k);\n    },\n\n    Out: function Out(k) {\n      if (k < 1 / 2.75) {\n        return 7.5625 * k * k;\n      } else if (k < 2 / 2.75) {\n        return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n      } else if (k < 2.5 / 2.75) {\n        return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n      } else {\n        return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n      }\n    },\n\n    InOut: function InOut(k) {\n      if (k < 0.5) {\n        return TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n      }\n\n      return TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n    }\n\n  }\n\n};\n\nTWEEN.Interpolation = {\n\n  Linear: function Linear(v, k) {\n    var m = v.length - 1;\n    var f = m * k;\n    var i = Math.floor(f);\n    var fn = TWEEN.Interpolation.Utils.Linear;\n\n    if (k < 0) {\n      return fn(v[0], v[1], f);\n    }\n\n    if (k > 1) {\n      return fn(v[m], v[m - 1], m - f);\n    }\n\n    return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  },\n\n  Bezier: function Bezier(v, k) {\n    var b = 0;\n    var n = v.length - 1;\n    var pw = Math.pow;\n    var bn = TWEEN.Interpolation.Utils.Bernstein;\n\n    for (var i = 0; i <= n; i++) {\n      b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n    }\n\n    return b;\n  },\n\n  CatmullRom: function CatmullRom(v, k) {\n    var m = v.length - 1;\n    var f = m * k;\n    var i = Math.floor(f);\n    var fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n    if (v[0] === v[m]) {\n      if (k < 0) {\n        i = Math.floor(f = m * (1 + k));\n      }\n\n      return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n    } else {\n      if (k < 0) {\n        return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n      }\n\n      if (k > 1) {\n        return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n      }\n\n      return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n    }\n  },\n\n  Utils: {\n\n    Linear: function Linear(p0, p1, t) {\n      return (p1 - p0) * t + p0;\n    },\n\n    Bernstein: function Bernstein(n, i) {\n      var fc = TWEEN.Interpolation.Utils.Factorial;\n\n      return fc(n) / fc(i) / fc(n - i);\n    },\n\n    Factorial: function () {\n      var a = [1];\n\n      return function (n) {\n        var s = 1;\n\n        if (a[n]) {\n          return a[n];\n        }\n\n        for (var i = n; i > 1; i--) {\n          s *= i;\n        }\n\n        a[n] = s;\n        return s;\n      };\n    }(),\n\n    CatmullRom: function CatmullRom(p0, p1, p2, p3, t) {\n      var v0 = (p2 - p0) * 0.5;\n      var v1 = (p3 - p1) * 0.5;\n      var t2 = t * t;\n      var t3 = t * t2;\n\n      return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n    }\n\n  }\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n  if (typeof module !== 'undefined' && ( false ? undefined : _typeof(exports)) === 'object') {\n    // Node.js\n    module.exports = TWEEN;\n  } else if (root !== undefined) {\n    // Global variable\n    root.TWEEN = TWEEN;\n  }\n})(undefined);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tween = __webpack_require__(10);\n\nvar _tween2 = _interopRequireDefault(_tween);\n\nvar _rafInterval = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar To = function () {\n  function To(element) {\n    _classCallCheck(this, To);\n\n    this.element = element;\n    this.cmds = [];\n    this.index = 0;\n    this.tweens = [];\n    this._pause = false;\n    this.loop = (0, _rafInterval.setRafInterval)(function () {\n      _tween2.default.update();\n    }, 15);\n    this.cycleCount = 0;\n  }\n\n  _createClass(To, [{\n    key: 'to',\n    value: function to(target, duration, easing) {\n      this.cmds.push(['to']);\n      if (arguments.length !== 0) {\n        for (var key in target) {\n          this.set(key, target[key], duration || 0, easing);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'set',\n    value: function set(prop, value, duration, easing) {\n      this.cmds[this.cmds.length - 1].push([prop, [value, duration, easing]]);\n      return this;\n    }\n  }, {\n    key: 'x',\n    value: function x() {\n      this.cmds[this.cmds.length - 1].push(['x', arguments]);\n      return this;\n    }\n  }, {\n    key: 'y',\n    value: function y() {\n      this.cmds[this.cmds.length - 1].push(['y', arguments]);\n      return this;\n    }\n  }, {\n    key: 'z',\n    value: function z() {\n      this.cmds[this.cmds.length - 1].push(['z', arguments]);\n      return this;\n    }\n  }, {\n    key: 'rotation',\n    value: function rotation() {\n      this.cmds[this.cmds.length - 1].push(['rotation', arguments]);\n      return this;\n    }\n  }, {\n    key: 'scaleX',\n    value: function scaleX() {\n      this.cmds[this.cmds.length - 1].push(['scaleX', arguments]);\n      return this;\n    }\n  }, {\n    key: 'scaleY',\n    value: function scaleY() {\n      this.cmds[this.cmds.length - 1].push(['scaleY', arguments]);\n      return this;\n    }\n  }, {\n    key: 'skewX',\n    value: function skewX() {\n      this.cmds[this.cmds.length - 1].push(['skewX', arguments]);\n      return this;\n    }\n  }, {\n    key: 'skewY',\n    value: function skewY() {\n      this.cmds[this.cmds.length - 1].push(['skewY', arguments]);\n      return this;\n    }\n  }, {\n    key: 'originX',\n    value: function originX() {\n      this.cmds[this.cmds.length - 1].push(['originX', arguments]);\n      return this;\n    }\n  }, {\n    key: 'originY',\n    value: function originY() {\n      this.cmds[this.cmds.length - 1].push(['originY', arguments]);\n      return this;\n    }\n  }, {\n    key: 'alpha',\n    value: function alpha() {\n      this.cmds[this.cmds.length - 1].push(['alpha', arguments]);\n      return this;\n    }\n  }, {\n    key: 'begin',\n    value: function begin(fn) {\n      this.cmds[this.cmds.length - 1].begin = fn;\n      return this;\n    }\n  }, {\n    key: 'progress',\n    value: function progress(fn) {\n      this.cmds[this.cmds.length - 1].progress = fn;\n      return this;\n    }\n  }, {\n    key: 'end',\n    value: function end(fn) {\n      this.cmds[this.cmds.length - 1].end = fn;\n      return this;\n    }\n  }, {\n    key: 'wait',\n    value: function wait() {\n      this.cmds.push(['wait', arguments]);\n      return this;\n    }\n  }, {\n    key: 'then',\n    value: function then() {\n      this.cmds.push(['then', arguments]);\n      return this;\n    }\n  }, {\n    key: 'cycle',\n    value: function cycle() {\n      this.cmds.push(['cycle', arguments]);\n      return this;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      if (this._pause) return;\n      var len = this.cmds.length;\n      if (this.index < len) {\n        this.exec(this.cmds[this.index], this.index === len - 1);\n      } else {\n        (0, _rafInterval.clearRafInterval)(this.loop);\n      }\n      return this;\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._pause = true;\n      for (var i = 0, len = this.tweens.length; i < len; i++) {\n        this.tweens[i].pause();\n      }\n      if (this.currentTask === 'wait') {\n        this.timeout -= new Date() - this.currentTaskBegin;\n        this.currentTaskBegin = new Date();\n      }\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      if (this._pause) {\n        this.play();\n      } else {\n        this.pause();\n      }\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      this._pause = false;\n      for (var i = 0, len = this.tweens.length; i < len; i++) {\n        this.tweens[i].play();\n      }\n      var self = this;\n      if (this.currentTask === 'wait') {\n        setTimeout(function () {\n          if (self._pause) return;\n          self.index++;\n          self.start();\n          if (self.index === self.cmds.length && self.complete) self.complete();\n        }, this.timeout);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      for (var i = 0, len = this.tweens.length; i < len; i++) {\n        this.tweens[i].stop();\n      }\n      this.cmds.length = 0;\n    }\n  }, {\n    key: 'animate',\n    value: function animate(name) {\n      this.cmds = this.cmds.concat(To.animationMap[name] || []);\n      return this;\n    }\n  }, {\n    key: 'exec',\n    value: function exec(cmd, last) {\n      var len = cmd.length,\n          self = this;\n      this.currentTask = cmd[0];\n      switch (this.currentTask) {\n        case 'to':\n          self.stepCompleteCount = 0;\n          for (var i = 1; i < len; i++) {\n            var task = cmd[i];\n            var ease = task[1][2];\n            var target = {};\n            var prop = task[0];\n            target[prop] = task[1][0];\n\n            var t = new _tween2.default.Tween(this.element).to(target, task[1][1]).onStart(function () {\n              if (cmd.begin) cmd.begin.call(self.element, self.element);\n            }).onUpdate(function () {\n              if (cmd.progress) cmd.progress.call(self.element, self.element);\n              // self.element[prop] = this[prop];\n            }).easing(ease || _tween2.default.Easing.Linear.None).onComplete(function () {\n              self.stepCompleteCount++;\n              if (self.stepCompleteCount === len - 1) {\n                if (cmd.end) cmd.end.call(self.element, self.element);\n                if (last && self.complete) self.complete();\n                self.index++;\n                self.start();\n              }\n            }).start();\n            this.tweens.push(t);\n          }\n          break;\n        case 'wait':\n          this.currentTaskBegin = new Date();\n          this.timeout = cmd[1][0];\n          setTimeout(function () {\n            if (self._pause) return;\n            self.index++;\n            self.start();\n            if (cmd.end) cmd.end.call(self.element, self.element);\n            if (last && self.complete) self.complete();\n          }, cmd[1][0]);\n          break;\n        case 'then':\n          var arg = cmd[1][0];\n          arg.index = 0;\n          arg.complete = function () {\n            self.index++;\n            self.start();\n            if (last && self.complete) self.complete();\n          };\n          arg.start();\n          break;\n        case 'cycle':\n          var count = cmd[1][1];\n          if (count === undefined) {\n            self.index = cmd[1][0] || 0;\n            self.start();\n          } else {\n            if (count && self.cycleCount === count) {\n              self.index++;\n              self.start();\n              if (last && self.complete) self.complete();\n            } else {\n              self.cycleCount++;\n              self.index = cmd[1][0];\n              self.start();\n            }\n          }\n          break;\n      }\n    }\n  }]);\n\n  return To;\n}();\n\nTo.get = function (element) {\n  var to = new To(element);\n  return to;\n};\n\nTo.animationMap = {};\nTo.extend = function (animationName, cmds) {\n  To.animationMap[animationName] = cmds;\n};\n\nexports.default = To;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setRafInterval = setRafInterval;\nexports.clearRafInterval = clearRafInterval;\n/*!\r\n *  raf-interval v0.3.0 By dntzhang\r\n *  Github: https://github.com/dntzhang/raf-interval\r\n *  MIT Licensed.\r\n */\n\nif (!Date.now) {\n  Date.now = function now() {\n    return new Date().getTime();\n  };\n}\n\nvar queue = [],\n    id = -1,\n    ticking = false,\n    tickId = null,\n    now = Date.now,\n    lastTime = 0,\n    vendors = ['ms', 'moz', 'webkit', 'o'],\n    x = 0,\n    isWeapp = typeof wx !== 'undefined' && !wx.createCanvas,\n    isWegame = typeof wx !== 'undefined' && wx.createCanvas,\n    isBrowser = typeof window !== 'undefined';\n\nvar raf = isBrowser ? window.requestAnimationFrame : null;\nvar caf = isBrowser ? window.cancelAnimationFrame : null;\n\nfunction mockRaf(callback, element) {\n  var currTime = now();\n  var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n  var id = setTimeout(function () {\n    callback(currTime + timeToCall);\n  }, timeToCall);\n  lastTime = currTime + timeToCall;\n  return id;\n}\n\nfunction mockCaf(id) {\n  clearTimeout(id);\n}\n\nif (isBrowser) {\n  window.setRafInterval = setRafInterval;\n  window.clearRafInterval = clearRafInterval;\n\n  for (; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n\n  if (!raf) {\n    raf = mockRaf;\n    caf = mockCaf;\n    window.requestAnimationFrame = raf;\n    window.cancelAnimationFrame = caf;\n  }\n} else if (isWeapp) {\n  raf = mockRaf;\n  caf = mockCaf;\n} else if (isWegame) {\n  raf = requestAnimationFrame;\n  caf = cancelAnimationFrame;\n}\n\nfunction setRafInterval(fn, interval) {\n  id++;\n  queue.push({ id: id, fn: fn, interval: interval, lastTime: now() });\n  if (!ticking) {\n    var tick = function tick() {\n      tickId = raf(tick);\n      each(queue, function (item) {\n        if (item.interval < 17 || now() - item.lastTime >= item.interval) {\n          item.fn();\n          item.lastTime = now();\n        }\n      });\n    };\n    ticking = true;\n    tick();\n  }\n  return id;\n}\n\nfunction clearRafInterval(id) {\n  var i = 0,\n      len = queue.length;\n\n  for (; i < len; i++) {\n    if (id === queue[i].id) {\n      queue.splice(i, 1);\n      break;\n    }\n  }\n\n  if (queue.length === 0) {\n    caf(tickId);\n    ticking = false;\n  }\n}\n\nfunction each(arr, fn) {\n  if (Array.prototype.forEach) {\n    arr.forEach(fn);\n  } else {\n    var i = 0,\n        len = arr.length;\n    for (; i < len; i++) {\n      fn(arr[i], i);\n    }\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _canvasRender = __webpack_require__(24);\n\nvar _canvasRender2 = _interopRequireDefault(_canvasRender);\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(canvasOrContext, width, height) {\n    _classCallCheck(this, Renderer);\n\n    this.renderList = [];\n    if (arguments.length === 3) {\n      this.renderer = new _canvasRender2.default(canvasOrContext, width, height);\n      this.width = width;\n      this.height = height;\n    } else {\n      this.renderer = new _canvasRender2.default(canvasOrContext);\n      this.width = canvasOrContext.width;\n      this.height = canvasOrContext.height;\n    }\n    this.ctx = this.renderer.ctx;\n  }\n\n  _createClass(Renderer, [{\n    key: 'update',\n    value: function update(stage) {\n      this.renderer.clear(this.ctx, this.width, this.height);\n      this.renderer.render(this.ctx, stage);\n      this.ctx.draw && this.ctx.draw();\n    }\n  }, {\n    key: 'getHitRenderList',\n    value: function getHitRenderList(stage) {\n      var objs = this.renderList;\n      objs.length = 0;\n      this.computeMatrix(stage);\n      return objs;\n    }\n  }, {\n    key: 'computeMatrix',\n    value: function computeMatrix(stage) {\n      for (var i = 0, len = stage.children.length; i < len; i++) {\n        this._computeMatrix(stage.children[i]);\n      }\n    }\n  }, {\n    key: 'initComplex',\n    value: function initComplex(o) {\n      o.complexCompositeOperation = this._getCompositeOperation(o);\n      o.complexAlpha = this._getAlpha(o, 1);\n    }\n  }, {\n    key: '_computeMatrix',\n    value: function _computeMatrix(o, mtx) {\n      if (!o.isVisible()) {\n        return;\n      }\n      if (mtx && !o.fixed) {\n        o._matrix.initialize(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      } else {\n        o._matrix.initialize(1, 0, 0, 1, 0, 0);\n      }\n\n      o._matrix.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.originX, o.originY);\n\n      if (o instanceof _group2.default) {\n        var list = o.children,\n            len = list.length,\n            i = 0;\n        for (; i < len; i++) {\n          this._computeMatrix(list[i], o._matrix);\n        }\n      } else {\n        // if (o instanceof Graphics) {\n        //   this.renderList.push(o)\n        //   this.initComplex(o)\n        // } else {\n        o.initAABB();\n        // if (this.isInStage(o)) {\n        this.renderList.push(o);\n        this.initComplex(o);\n        // }\n        // }\n      }\n    }\n  }, {\n    key: '_getCompositeOperation',\n    value: function _getCompositeOperation(o) {\n      if (o.compositeOperation) return o.compositeOperation;\n      if (o.parent) return this._getCompositeOperation(o.parent);\n    }\n  }, {\n    key: '_getAlpha',\n    value: function _getAlpha(o, alpha) {\n      var result = o.alpha * alpha;\n      if (o.parent) {\n        return this._getAlpha(o.parent, result);\n      }\n      return result;\n    }\n  }, {\n    key: 'isInStage',\n    value: function isInStage(o) {\n      return this.collisionBetweenAABB(o.AABB, this.stage.AABB);\n    }\n  }, {\n    key: 'collisionBetweenAABB',\n    value: function collisionBetweenAABB(AABB1, AABB2) {\n      var maxX = AABB1[0] + AABB1[2];\n      if (maxX < AABB2[0]) return false;\n      var minX = AABB1[0];\n      if (minX > AABB2[0] + AABB2[2]) return false;\n      var maxY = AABB1[1] + AABB1[3];\n      if (maxY < AABB2[1]) return false;\n      var minY = AABB1[1];\n      if (minY > AABB2[1] + AABB2[3]) return false;\n      return true;\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexports.default = Renderer;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _renderer = __webpack_require__(13);\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _wxHitRender = __webpack_require__(38);\n\nvar _wxHitRender2 = _interopRequireDefault(_wxHitRender);\n\nvar _event = __webpack_require__(7);\n\nvar _event2 = _interopRequireDefault(_event);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WeStage = function (_Group) {\n  _inherits(WeStage, _Group);\n\n  function WeStage(width, height, id, page) {\n    _classCallCheck(this, WeStage);\n\n    var _this = _possibleConstructorReturn(this, (WeStage.__proto__ || Object.getPrototypeOf(WeStage)).call(this));\n\n    var component = page.selectComponent('#' + id);\n    component.setData({\n      width: width,\n      height: height\n    });\n    component.stage = _this;\n    var canvasId = component.getCaxCanvasId();\n\n    var ctx = wx.createCanvasContext(canvasId, component);\n    var hitCtx = wx.createCanvasContext(canvasId + 'Hit', component);\n    _this.renderer = new _renderer2.default(ctx, width, height);\n    _this._hitRender = new _wxHitRender2.default(hitCtx, component, canvasId);\n    _this._overObject = null;\n    _this.ctx = ctx;\n    _this.hitAABB = true;\n    _this.width = width;\n    _this.height = height;\n    return _this;\n  }\n\n  _createClass(WeStage, [{\n    key: 'touchStartHandler',\n    value: function touchStartHandler(evt) {\n      var _this2 = this;\n\n      var p1 = evt.changedTouches[0];\n\n      evt.stageX = p1.x;\n      evt.stageY = p1.y;\n\n      this._getObjectUnderPoint(evt, function (obj) {\n        _this2.willDragObject = obj;\n        _this2._mouseDownX = evt.stageX;\n        _this2._mouseDownY = evt.stageY;\n        _this2.preStageX = evt.stageX;\n        _this2.preStageY = evt.stageY;\n      });\n    }\n  }, {\n    key: 'touchMoveHandler',\n    value: function touchMoveHandler(evt) {\n      var _this3 = this;\n\n      var p1 = evt.changedTouches[0];\n\n      evt.stageX = p1.x;\n      evt.stageY = p1.y;\n\n      this._getObjectUnderPoint(evt, function (obj) {\n        var mockEvt = new _event2.default();\n        mockEvt.stageX = evt.stageX;\n        mockEvt.stageY = evt.stageY;\n        mockEvt.pureEvent = evt;\n\n        if (_this3.willDragObject) {\n          mockEvt.type = 'drag';\n          mockEvt.dx = mockEvt.stageX - _this3.preStageX;\n          mockEvt.dy = mockEvt.stageY - _this3.preStageY;\n          _this3.preStageX = mockEvt.stageX;\n          _this3.preStageY = mockEvt.stageY;\n          _this3.willDragObject.dispatchEvent(mockEvt);\n        }\n\n        if (obj) {\n          if (_this3._overObject === null) {\n            _this3._overObject = obj;\n          } else {\n            if (obj.id !== _this3._overObject.id) {\n              _this3._overObject = obj;\n            } else {\n              mockEvt.type = 'touchmove';\n              obj.dispatchEvent(mockEvt);\n            }\n          }\n        } else if (_this3._overObject) {\n          _this3._overObject = null;\n        }\n      });\n    }\n  }, {\n    key: 'touchEndHandler',\n    value: function touchEndHandler(evt) {\n      var _this4 = this;\n\n      var p1 = evt.changedTouches[0];\n\n      evt.stageX = p1.x;\n      evt.stageY = p1.y;\n\n      var mockEvt = new _event2.default();\n      mockEvt.stageX = evt.stageX;\n      mockEvt.stageY = evt.stageY;\n\n      mockEvt.pureEvent = evt;\n\n      this._getObjectUnderPoint(evt, function (obj) {\n        _this4._mouseUpX = evt.stageX;\n        _this4._mouseUpY = evt.stageY;\n\n        _this4.willDragObject = null;\n        _this4.preStageX = null;\n        _this4.preStageY = null;\n\n        if (obj && Math.abs(_this4._mouseDownX - _this4._mouseUpX) < 30 && Math.abs(_this4._mouseDownY - _this4._mouseUpY) < 30) {\n          mockEvt.type = 'tap';\n          obj.dispatchEvent(mockEvt);\n        }\n      });\n    }\n  }, {\n    key: '_handleMouseOut',\n    value: function _handleMouseOut(evt) {\n      this.dispatchEvent({\n        pureEvent: evt,\n        type: 'mouseout',\n        stageX: evt.stageX,\n        stageY: evt.stageY\n      });\n    }\n  }, {\n    key: '_getObjectUnderPoint',\n    value: function _getObjectUnderPoint(evt, cb) {\n      var list = this.renderer.getHitRenderList(this);\n      if (this.hitAABB) {\n        return this._hitRender.hitAABB(list, evt, cb);\n      } else {\n        this._hitRender.clear();\n        this._hitRender.hit(list, evt, cb, list.length - 1);\n      }\n    }\n  }, {\n    key: 'on',\n    value: function on(type, cb) {\n      switch (type) {\n        case 'touchstart':\n          this.touchStart = cb;\n          break;\n        case 'touchmove':\n          this.touchMove = cb;\n          break;\n        case 'touchend':\n          this.touchEnd = cb;\n          break;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      this.renderer.update(this);\n    }\n  }]);\n\n  return WeStage;\n}(_group2.default);\n\nexports.default = WeStage;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RoundedRect = function (_Shape) {\n  _inherits(RoundedRect, _Shape);\n\n  function RoundedRect(width, height, r, option) {\n    _classCallCheck(this, RoundedRect);\n\n    var _this = _possibleConstructorReturn(this, (RoundedRect.__proto__ || Object.getPrototypeOf(RoundedRect)).call(this));\n\n    _this.option = Object.assign({\n      lineWidth: 1\n    }, option);\n    _this.r = r || 0;\n    _this.width = width;\n    _this.height = height;\n    return _this;\n  }\n\n  _createClass(RoundedRect, [{\n    key: 'draw',\n    value: function draw() {\n      var width = this.width,\n          height = this.height,\n          r = this.r;\n\n      var ax = r,\n          ay = 0,\n          bx = width,\n          by = 0,\n          cx = width,\n          cy = height,\n          dx = 0,\n          dy = height,\n          ex = 0,\n          ey = 0;\n\n      this.beginPath();\n\n      this.moveTo(ax, ay);\n      this.arcTo(bx, by, cx, cy, r);\n      this.arcTo(cx, cy, dx, dy, r);\n      this.arcTo(dx, dy, ex, ey, r);\n      this.arcTo(ex, ey, ax, ay, r);\n\n      if (this.option.fillStyle) {\n        this.closePath();\n        this.fillStyle(this.option.fillStyle);\n        this.fill();\n      }\n\n      if (this.option.strokeStyle) {\n        this.lineWidth(this.option.lineWidth);\n        this.strokeStyle(this.option.strokeStyle);\n        this.stroke();\n      }\n    }\n  }]);\n\n  return RoundedRect;\n}(_shape2.default);\n\nexports.default = RoundedRect;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _tween = __webpack_require__(10);\n\nvar _tween2 = _interopRequireDefault(_tween);\n\nvar _to = __webpack_require__(11);\n\nvar _to2 = _interopRequireDefault(_to);\n\n__webpack_require__(18);\n\nvar _stage = __webpack_require__(19);\n\nvar _stage2 = _interopRequireDefault(_stage);\n\nvar _weStage = __webpack_require__(14);\n\nvar _weStage2 = _interopRequireDefault(_weStage);\n\nvar _graphics = __webpack_require__(4);\n\nvar _graphics2 = _interopRequireDefault(_graphics);\n\nvar _bitmap = __webpack_require__(2);\n\nvar _bitmap2 = _interopRequireDefault(_bitmap);\n\nvar _text = __webpack_require__(5);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _sprite = __webpack_require__(6);\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nvar _roundedRect = __webpack_require__(15);\n\nvar _roundedRect2 = _interopRequireDefault(_roundedRect);\n\nvar _arrowPath = __webpack_require__(39);\n\nvar _arrowPath2 = _interopRequireDefault(_arrowPath);\n\nvar _ellipse = __webpack_require__(40);\n\nvar _ellipse2 = _interopRequireDefault(_ellipse);\n\nvar _path = __webpack_require__(41);\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _button = __webpack_require__(44);\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _rect = __webpack_require__(45);\n\nvar _rect2 = _interopRequireDefault(_rect);\n\nvar _circle = __webpack_require__(46);\n\nvar _circle2 = _interopRequireDefault(_circle);\n\nvar _polygon = __webpack_require__(47);\n\nvar _polygon2 = _interopRequireDefault(_polygon);\n\nvar _equilateralPolygon = __webpack_require__(48);\n\nvar _equilateralPolygon2 = _interopRequireDefault(_equilateralPolygon);\n\nvar _rafInterval = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_to2.default.easing = {\n  linear: _tween2.default.Easing.Linear.None\n};\n\nvar cax = {\n  easing: {\n    linear: _tween2.default.Easing.Linear.None\n  },\n  util: {\n    randomInt: function randomInt(min, max) {\n      return min + Math.floor(Math.random() * (max - min + 1));\n    }\n  },\n\n  Stage: _stage2.default,\n  WeStage: _weStage2.default,\n  Graphics: _graphics2.default,\n  Bitmap: _bitmap2.default,\n  Text: _text2.default,\n  Group: _group2.default,\n  Sprite: _sprite2.default,\n  Shape: _shape2.default,\n\n  ArrowPath: _arrowPath2.default,\n  Ellipse: _ellipse2.default,\n  Path: _path2.default,\n\n  Button: _button2.default,\n\n  RoundedRect: _roundedRect2.default,\n  Rect: _rect2.default,\n  Circle: _circle2.default,\n  Polygon: _polygon2.default,\n  EquilateralPolygon: _equilateralPolygon2.default,\n\n  setInterval: _rafInterval.setRafInterval,\n  clearInterval: _rafInterval.clearRafInterval,\n  tick: function tick(fn) {\n    return (0, _rafInterval.setRafInterval)(fn, 16);\n  },\n  untick: function untick(tickId) {\n    (0, _rafInterval.clearRafInterval)(tickId);\n  },\n\n  caxCanvasId: 0,\n  TWEEN: _tween2.default,\n  To: _to2.default\n};\n\n['Quadratic', 'Cubic', 'Quartic', 'Quintic', 'Sinusoidal', 'Exponential', 'Circular', 'Elastic', 'Back', 'Bounce'].forEach(function (item) {\n  var itemLower = item.toLowerCase();\n  cax.easing[itemLower + 'In'] = _tween2.default.Easing[item].In;\n  cax.easing[itemLower + 'Out'] = _tween2.default.Easing[item].Out;\n  cax.easing[itemLower + 'InOut'] = _tween2.default.Easing[item].InOut;\n\n  _to2.default.easing[itemLower + 'In'] = _tween2.default.Easing[item].In;\n  _to2.default.easing[itemLower + 'Out'] = _tween2.default.Easing[item].Out;\n  _to2.default.easing[itemLower + 'InOut'] = _tween2.default.Easing[item].InOut;\n});\n\ncax.loadImg = function (option) {\n  var img = new Image();\n  img.onload = function () {\n    option.complete(this);\n  };\n  img.src = option.img;\n};\n\ncax.loadImgs = function (option) {\n  var result = [];\n  var loaded = 0;\n  var len = option.imgs.length;\n  option.imgs.forEach(function (src, index) {\n    var img = new Image();\n    img.onload = function (i, img) {\n      return function () {\n        result[i] = img;\n        loaded++;\n        option.progress && option.progress(loaded / len, loaded, i, img, result);\n        if (loaded === len) {\n          option.complete && option.complete(result);\n        }\n      };\n    }(index, img);\n    img.src = src;\n  });\n};\n\nmodule.exports = cax;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _to = __webpack_require__(11);\n\nvar _to2 = _interopRequireDefault(_to);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_to2.default.extend('rubber', [['to', ['scaleX', {\n  '0': 1.25,\n  '1': 300\n}], ['scaleY', {\n  '0': 0.75,\n  '1': 300\n}]], ['to', ['scaleX', {\n  '0': 0.75,\n  '1': 100\n}], ['scaleY', {\n  '0': 1.25,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 1.15,\n  '1': 100\n}], ['scaleY', {\n  '0': 0.85,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 0.95,\n  '1': 150\n}], ['scaleY', {\n  '0': 1.05,\n  '1': 150\n}]], ['to', ['scaleX', {\n  '0': 1.05,\n  '1': 100\n}], ['scaleY', {\n  '0': 0.95,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 1,\n  '1': 250\n}], ['scaleY', {\n  '0': 1,\n  '1': 250\n}]]]);\n\n_to2.default.extend('bounceIn', [['to', ['scaleX', {\n  '0': 0,\n  '1': 0\n}], ['scaleY', {\n  '0': 0,\n  '1': 0\n}]], ['to', ['scaleX', {\n  '0': 1.35,\n  '1': 200\n}], ['scaleY', {\n  '0': 1.35,\n  '1': 200\n}]], ['to', ['scaleX', {\n  '0': 0.9,\n  '1': 100\n}], ['scaleY', {\n  '0': 0.9,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 1.1,\n  '1': 100\n}], ['scaleY', {\n  '0': 1.1,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 0.95,\n  '1': 100\n}], ['scaleY', {\n  '0': 0.95,\n  '1': 100\n}]], ['to', ['scaleX', {\n  '0': 1,\n  '1': 100\n}], ['scaleY', {\n  '0': 1,\n  '1': 100\n}]]]);\n\n_to2.default.extend('flipInX', [['to', ['rotateX', {\n  '0': -90,\n  '1': 0\n}]], ['to', ['rotateX', {\n  '0': 20,\n  '1': 300\n}]], ['to', ['rotateX', {\n  '0': -20,\n  '1': 300\n}]], ['to', ['rotateX', {\n  '0': 10,\n  '1': 300\n}]], ['to', ['rotateX', {\n  '0': -5,\n  '1': 300\n}]], ['to', ['rotateX', {\n  '0': 0,\n  '1': 300\n}]]]);\n\n_to2.default.extend('zoomOut', [['to', ['scaleX', {\n  '0': 0,\n  '1': 400\n}], ['scaleY', {\n  '0': 0,\n  '1': 400\n}]]]);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _wegameCanvas = __webpack_require__(20);\n\nvar _wegameCanvas2 = _interopRequireDefault(_wegameCanvas);\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _renderer = __webpack_require__(13);\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _hitRender = __webpack_require__(37);\n\nvar _hitRender2 = _interopRequireDefault(_hitRender);\n\nvar _event = __webpack_require__(7);\n\nvar _event2 = _interopRequireDefault(_event);\n\nvar _weStage = __webpack_require__(14);\n\nvar _weStage2 = _interopRequireDefault(_weStage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Stage = function (_Group) {\n  _inherits(Stage, _Group);\n\n  function Stage(width, height, renderTo) {\n    _classCallCheck(this, Stage);\n\n    var _this = _possibleConstructorReturn(this, (Stage.__proto__ || Object.getPrototypeOf(Stage)).call(this));\n\n    var len = arguments.length;\n    _this.isWegame = typeof wx !== 'undefined' && wx.createCanvas;\n    _this.moveDetectionInterval = 0;\n    if (len === 0) {\n      // wegame\n      _this.canvas = _wegameCanvas2.default;\n      _this.disableMoveDetection = true;\n      _this.moveDetectionInterval = 500;\n    } else if (len === 4) {\n      var _ret;\n\n      // weapp\n      return _ret = new _weStage2.default(arguments[0], arguments[1], arguments[2], arguments[3]), _possibleConstructorReturn(_this, _ret);\n    } else {\n      if (len === 1) {\n        _this.canvas = typeof width === 'string' ? document.querySelector(width) : width;\n      } else {\n        _this.renderTo = typeof renderTo === 'string' ? document.querySelector(renderTo) : renderTo;\n        if (_this.renderTo.tagName === 'CANVAS') {\n          _this.canvas = _this.renderTo;\n          _this.canvas.width = width;\n          _this.canvas.height = height;\n        } else {\n          _this.canvas = document.createElement('canvas');\n          _this.canvas.width = width;\n          _this.canvas.height = height;\n          _this.renderTo.appendChild(_this.canvas);\n        }\n      }\n      // get rect again when trigger onscroll onresize event!?\n      _this._boundingClientRect = _this.canvas.getBoundingClientRect();\n\n      _this.offset = _this._getOffset(_this.canvas);\n    }\n    _this.renderer = new _renderer2.default(_this.canvas);\n    if (_this.isWegame) {\n      wx.onTouchStart(function (evt) {\n        return _this._handleMouseDown(evt);\n      });\n\n      wx.onTouchMove(function (evt) {\n        return _this._handleMouseMove(evt);\n      });\n\n      wx.onTouchEnd(function (evt) {\n        return _this._handleMouseUp(evt);\n      });\n    } else {\n      _this.canvas.addEventListener('click', function (evt) {\n        return _this._handleClick(evt);\n      });\n      _this.canvas.addEventListener('mousedown', function (evt) {\n        return _this._handleMouseDown(evt);\n      });\n      _this.canvas.addEventListener('mousemove', function (evt) {\n        return _this._handleMouseMove(evt);\n      });\n      _this.canvas.addEventListener('mouseup', function (evt) {\n        return _this._handleMouseUp(evt);\n      });\n      _this.canvas.addEventListener('mouseout', function (evt) {\n        return _this._handleMouseOut(evt);\n      });\n      _this.canvas.addEventListener('touchstart', function (evt) {\n        return _this._handleMouseDown(evt);\n      });\n      _this.canvas.addEventListener('touchmove', function (evt) {\n        return _this._handleMouseMove(evt);\n      });\n      _this.canvas.addEventListener('touchend', function (evt) {\n        return _this._handleMouseUp(evt);\n      });\n\n      _this.canvas.addEventListener('dblclick', function (evt) {\n        return _this._handleDblClick(evt);\n      });\n      // this.addEvent(this.canvas, \"mousewheel\", this._handleMouseWheel.bind(this));\n\n      document.addEventListener('contextmenu', function (evt) {\n        return _this._handleContextmenu(evt);\n      });\n    }\n\n    _this.borderTopWidth = 0;\n    _this.borderLeftWidth = 0;\n\n    _this.hitAABB = false;\n    _this._hitRender = new _hitRender2.default();\n\n    _this._overObject = null;\n\n    _this._scaleX = 1;\n    _this._scaleY = 1;\n\n    _this._mouseDownX = 0;\n    _this._mouseDownY = 0;\n\n    _this._mouseUpX = 0;\n    _this._mouseUpY = 0;\n\n    _this.willDragObject = null;\n    _this.preStageX = null;\n    _this.preStageY = null;\n\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n\n    _this.___instanceof = 'Stage';\n\n    _this._moveDetectionTime = Date.now();\n    return _this;\n  }\n\n  _createClass(Stage, [{\n    key: '_handleContextmenu',\n    value: function _handleContextmenu(evt) {\n      this._getObjectUnderPoint(evt);\n    }\n  }, {\n    key: '_handleDblClick',\n    value: function _handleDblClick(evt) {\n      this._getObjectUnderPoint(evt);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(evt) {\n      if (Math.abs(this._mouseDownX - this._mouseUpX) < 20 && Math.abs(this._mouseDownY - this._mouseUpY) < 20) {\n        this._getObjectUnderPoint(evt);\n      }\n    }\n  }, {\n    key: '_handleMouseDown',\n    value: function _handleMouseDown(evt) {\n      if (this.isWegame) {\n        evt.type = 'touchstart';\n      }\n      this.offset = this._getOffset(this.canvas);\n      var obj = this._getObjectUnderPoint(evt);\n      this.willDragObject = obj;\n      this._mouseDownX = evt.stageX;\n      this._mouseDownY = evt.stageY;\n      this.preStageX = evt.stageX;\n      this.preStageY = evt.stageY;\n    }\n  }, {\n    key: 'scaleEventPoint',\n    value: function scaleEventPoint(x, y) {\n      this._scaleX = x;\n      this._scaleY = y;\n    }\n  }, {\n    key: '_handleMouseUp',\n    value: function _handleMouseUp(evt) {\n      if (this.isWegame) {\n        evt.type = 'touchend';\n      }\n      var obj = this._getObjectUnderPoint(evt);\n      this._mouseUpX = evt.stageX;\n      this._mouseUpY = evt.stageY;\n\n      var mockEvt = new _event2.default();\n      mockEvt.stageX = evt.stageX;\n      mockEvt.stageY = evt.stageY;\n      mockEvt.pureEvent = evt;\n\n      this.willDragObject = null;\n      this.preStageX = null;\n      this.preStageY = null;\n\n      if (obj && evt.type === 'touchend' && Math.abs(this._mouseDownX - this._mouseUpX) < 30 && Math.abs(this._mouseDownY - this._mouseUpY) < 30) {\n        mockEvt.type = 'tap';\n        obj.dispatchEvent(mockEvt);\n      }\n    }\n  }, {\n    key: '_handleMouseOut',\n    value: function _handleMouseOut(evt) {\n      this._computeStageXY(evt);\n      this.dispatchEvent({\n        pureEvent: evt,\n        type: 'mouseout',\n        stageX: evt.stageX,\n        stageY: evt.stageY\n      });\n    }\n  }, {\n    key: '_handleMouseMove',\n    value: function _handleMouseMove(evt) {\n      if (Date.now() - this._moveDetectionTime < this.moveDetectionInterval) {\n        return;\n      }\n      this._moveDetectionTime = Date.now();\n\n      if (this.isWegame) {\n        evt.type = 'touchmove';\n      }\n      if (this.disableMoveDetection) return;\n      var obj = this._getObjectUnderPoint(evt);\n      var mockEvt = new _event2.default();\n      mockEvt.stageX = evt.stageX;\n      mockEvt.stageY = evt.stageY;\n      mockEvt.pureEvent = evt;\n\n      if (this.willDragObject) {\n        mockEvt.type = 'drag';\n        mockEvt.dx = mockEvt.stageX - this.preStageX;\n        mockEvt.dy = mockEvt.stageY - this.preStageY;\n        this.preStageX = mockEvt.stageX;\n        this.preStageY = mockEvt.stageY;\n        this.willDragObject.dispatchEvent(mockEvt);\n      }\n\n      if (obj) {\n        if (this._overObject === null) {\n          mockEvt.type = 'mouseover';\n          obj.dispatchEvent(mockEvt);\n          this._overObject = obj;\n          this._setCursor(obj);\n        } else {\n          if (obj.id !== this._overObject.id) {\n            this._overObject.dispatchEvent({\n              pureEvent: evt,\n              type: 'mouseout',\n              stageX: evt.stageX,\n              stageY: evt.stageY\n            });\n            mockEvt.type = 'mouseover';\n            obj.dispatchEvent(mockEvt);\n            this._setCursor(obj);\n            this._overObject = obj;\n          } else {\n            mockEvt.type = 'mousemove';\n            obj.dispatchEvent(mockEvt);\n            mockEvt.type = 'touchmove';\n            obj.dispatchEvent(mockEvt);\n          }\n        }\n      } else if (this._overObject) {\n        mockEvt.type = 'mouseout';\n        this._overObject.dispatchEvent(mockEvt);\n        this._overObject = null;\n        this._setCursor({ cursor: 'default' });\n      }\n    }\n  }, {\n    key: '_setCursor',\n    value: function _setCursor(obj) {\n      if (!this.canvas.style) {\n        return;\n      }\n      if (obj.cursor) {\n        this.canvas.style.cursor = obj.cursor;\n      } else if (obj.parent) {\n        this._setCursor(obj.parent);\n      } else {\n        this._setCursor({ cursor: 'default' });\n      }\n    }\n  }, {\n    key: '_getObjectUnderPoint',\n    value: function _getObjectUnderPoint(evt) {\n      this._computeStageXY(evt);\n      if (this.hitAABB) {\n        return this._hitRender.hitAABB(this, evt);\n      } else {\n        return this._hitRender.hitPixel(this, evt);\n      }\n    }\n  }, {\n    key: '_computeStageXY',\n    value: function _computeStageXY(evt) {\n      this._boundingClientRect = this.isWegame ? { left: 0, top: 0 } : this.canvas.getBoundingClientRect();\n      if (evt.touches || evt.changedTouches) {\n        var firstTouch = evt.touches[0] || evt.changedTouches[0];\n        if (firstTouch) {\n          evt.stageX = (firstTouch.pageX - this.offset[0]) / this._scaleX;\n          evt.stageY = (firstTouch.pageY - this.offset[1]) / this._scaleY;\n        }\n      } else {\n        evt.stageX = (evt.clientX - this._boundingClientRect.left - this.borderLeftWidth) / this._scaleX;\n        evt.stageY = (evt.clientY - this._boundingClientRect.top - this.borderTopWidth) / this._scaleY;\n      }\n    }\n  }, {\n    key: '_getOffset',\n    value: function _getOffset(el) {\n      if (this.isWegame) {\n        return [0, 0];\n      }\n      var _t = 0,\n          _l = 0;\n      if (document.documentElement.getBoundingClientRect && el.getBoundingClientRect) {\n        var box = el.getBoundingClientRect();\n        _l = box.left;\n        _t = box.top;\n      } else {\n        while (el.offsetParent) {\n          _t += el.offsetTop;\n          _l += el.offsetLeft;\n          el = el.offsetParent;\n        }\n        return [_l, _t];\n      }\n      return [_l + Math.max(document.documentElement.scrollLeft, document.body.scrollLeft), _t + Math.max(document.documentElement.scrollTop, document.body.scrollTop)];\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      this.renderer.update(this);\n    }\n  }, {\n    key: 'on',\n    value: function on(type, fn) {\n      var _this2 = this;\n\n      this.canvas.addEventListener(type, function (evt) {\n        _this2._computeStageXY(evt);\n        fn(evt);\n      });\n    }\n  }, {\n    key: 'off',\n    value: function off(type, fn) {\n      this.canvas.removeEventListener(type, fn);\n    }\n  }]);\n\n  return Stage;\n}(_group2.default);\n\nexports.default = Stage;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar wegameCanvas = null;\nif (typeof wx !== 'undefined' && wx.createCanvas) {\n  wegameCanvas = wx.createCanvas();\n}\n\nexports.default = wegameCanvas;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEG_TO_RAD = 0.017453292519943295;\nvar PI_2 = Math.PI * 2;\n\nvar Matrix2D = function () {\n  function Matrix2D(a, b, c, d, tx, ty) {\n    _classCallCheck(this, Matrix2D);\n\n    this.a = a == null ? 1 : a;\n    this.b = b || 0;\n    this.c = c || 0;\n    this.d = d == null ? 1 : d;\n    this.tx = tx || 0;\n    this.ty = ty || 0;\n    return this;\n  }\n\n  _createClass(Matrix2D, [{\n    key: \"identity\",\n    value: function identity() {\n      this.a = this.d = 1;\n      this.b = this.c = this.tx = this.ty = 0;\n      return this;\n    }\n  }, {\n    key: \"appendTransform\",\n    value: function appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, originX, originY) {\n      if (rotation % 360) {\n        var r = rotation * DEG_TO_RAD;\n        var cos = Math.cos(r);\n        var sin = Math.sin(r);\n      } else {\n        cos = 1;\n        sin = 0;\n      }\n      if (skewX || skewY) {\n        skewX *= DEG_TO_RAD;\n        skewY *= DEG_TO_RAD;\n        this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n        this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      } else {\n        this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n      }\n      if (originX || originY) {\n        this.tx -= originX * this.a + originY * this.c;\n        this.ty -= originX * this.b + originY * this.d;\n      }\n      return this;\n    }\n  }, {\n    key: \"append\",\n    value: function append(a, b, c, d, tx, ty) {\n      var a1 = this.a;\n      var b1 = this.b;\n      var c1 = this.c;\n      var d1 = this.d;\n      this.a = a * a1 + b * c1;\n      this.b = a * b1 + b * d1;\n      this.c = c * a1 + d * c1;\n      this.d = c * b1 + d * d1;\n      this.tx = tx * a1 + ty * c1 + this.tx;\n      this.ty = tx * b1 + ty * d1 + this.ty;\n      return this;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(a, b, c, d, tx, ty) {\n      this.a = a;\n      this.b = b;\n      this.c = c;\n      this.d = d;\n      this.tx = tx;\n      this.ty = ty;\n      return this;\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(a, b, c, d, tx, ty) {\n      this.a = a == null ? 1 : a;\n      this.b = b || 0;\n      this.c = c || 0;\n      this.d = d == null ? 1 : d;\n      this.tx = tx || 0;\n      this.ty = ty || 0;\n      return this;\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      var a1 = this.a;\n      var b1 = this.b;\n      var c1 = this.c;\n      var d1 = this.d;\n      var tx1 = this.tx;\n      var n = a1 * d1 - b1 * c1;\n\n      this.a = d1 / n;\n      this.b = -b1 / n;\n      this.c = -c1 / n;\n      this.d = a1 / n;\n      this.tx = (c1 * this.ty - d1 * tx1) / n;\n      this.ty = -(a1 * this.ty - b1 * tx1) / n;\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(matrix) {\n      return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n    }\n  }]);\n\n  return Matrix2D;\n}();\n\nMatrix2D.decompose = function (a, b, c, d, tx, ty, transform) {\n  var skewX = -Math.atan2(-c, d);\n  var skewY = Math.atan2(b, a);\n\n  var delta = Math.abs(skewX + skewY);\n\n  if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001) {\n    transform.rotation = skewY;\n\n    if (a < 0 && d >= 0) {\n      transform.rotation += transform.rotation <= 0 ? Math.PI : -Math.PI;\n    }\n\n    transform.skewX = transform.skewY = 0;\n  } else {\n    transform.rotation = 0;\n    transform.skewX = skewX;\n    transform.skewY = skewY;\n  }\n\n  // next set scale\n  transform.scaleX = Math.sqrt(a * a + b * b);\n  transform.scaleY = Math.sqrt(c * c + d * d);\n\n  // next set position\n  transform.x = tx;\n  transform.y = ty;\n};\n\nexports.default = Matrix2D;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EventDispatcher = function () {\n  function EventDispatcher() {\n    _classCallCheck(this, EventDispatcher);\n\n    this._listeners = null;\n    this._captureListeners = null;\n  }\n\n  _createClass(EventDispatcher, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, useCapture) {\n      var listeners;\n      if (useCapture) {\n        listeners = this._captureListeners = this._captureListeners || {};\n      } else {\n        listeners = this._listeners = this._listeners || {};\n      }\n      var arr = listeners[type];\n      if (arr) {\n        this.removeEventListener(type, listener, useCapture);\n      }\n      arr = listeners[type]; // remove may have deleted the array\n      if (!arr) {\n        listeners[type] = [listener];\n      } else {\n        arr.push(listener);\n      }\n      return listener;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener, useCapture) {\n      var listeners = useCapture ? this._captureListeners : this._listeners;\n      if (!listeners) {\n        return;\n      }\n      var arr = listeners[type];\n      if (!arr) {\n        return;\n      }\n\n      arr.every(function (item, index) {\n        if (item === listener) {\n          arr.splice(index, 1);\n          return false;\n        }\n        return true;\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, listener, useCapture) {\n      this.addEventListener(type, listener, useCapture);\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, listener, useCapture) {\n      this.removeEventListener(type, listener, useCapture);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(evt) {\n\n      var top = this,\n          list = [top];\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n      var i,\n          l = list.length;\n\n      // capture & atTarget\n      for (i = l - 1; i >= 0 && !evt.propagationStopped; i--) {\n        list[i]._dispatchEvent(evt, 0);\n      }\n      // bubbling\n      for (i = 0; i < l && !evt.propagationStopped; i++) {\n        list[i]._dispatchEvent(evt, 1);\n      }\n    }\n  }, {\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent(evt, type) {\n      var _this = this;\n\n      evt.target = this;\n      if (this._captureListeners && type === 0) {\n        var cls = this._captureListeners[evt.type];\n        cls && cls.forEach(function (fn) {\n          fn.call(_this, evt);\n        });\n      }\n\n      if (this._listeners && type === 1) {\n        var ls = this._listeners[evt.type];\n        ls && ls.forEach(function (fn) {\n          fn.call(_this, evt);\n        });\n      }\n    }\n  }]);\n\n  return EventDispatcher;\n}();\n\nexports.default = EventDispatcher;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar UID = {};\n\nUID._nextID = 0;\n\nUID.get = function () {\n  return UID._nextID++;\n};\n\nexports.default = UID;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _graphics = __webpack_require__(4);\n\nvar _graphics2 = _interopRequireDefault(_graphics);\n\nvar _render2 = __webpack_require__(8);\n\nvar _render3 = _interopRequireDefault(_render2);\n\nvar _sprite = __webpack_require__(6);\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _bitmap = __webpack_require__(2);\n\nvar _bitmap2 = _interopRequireDefault(_bitmap);\n\nvar _text = __webpack_require__(5);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _index = __webpack_require__(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CanvasRender = function (_Render) {\n  _inherits(CanvasRender, _Render);\n\n  function CanvasRender(canvasOrContext, width, height) {\n    _classCallCheck(this, CanvasRender);\n\n    var _this = _possibleConstructorReturn(this, (CanvasRender.__proto__ || Object.getPrototypeOf(CanvasRender)).call(this));\n\n    if (arguments.length === 3) {\n      _this.ctx = canvasOrContext;\n      _this.width = width;\n      _this.height = height;\n    } else {\n      _this.ctx = canvasOrContext.getContext('2d');\n      _this.width = canvasOrContext.width;\n      _this.height = canvasOrContext.height;\n    }\n    return _this;\n  }\n\n  _createClass(CanvasRender, [{\n    key: 'clear',\n    value: function clear(ctx, width, height) {\n      ctx.clearRect(0, 0, width, height);\n    }\n  }, {\n    key: 'render',\n    value: function render(ctx, o, cacheData) {\n      var mtx = o._matrix;\n      if (o.children) {\n        var list = o.children.slice(0),\n            l = list.length;\n        for (var i = 0; i < l; i++) {\n          var child = list[i];\n          mtx.initialize(1, 0, 0, 1, 0, 0);\n          mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.originX, o.originY);\n          // if (!this.checkBoundEvent(child)) continue\n          ctx.save();\n          this._render(ctx, child, cacheData ? null : mtx, cacheData, true);\n          ctx.restore();\n        }\n      } else {\n        this._render(ctx, o, cacheData ? null : mtx, cacheData);\n      }\n    }\n  }, {\n    key: '_render',\n    value: function _render(ctx, o, mtx, cacheData, inGroup) {\n      if (!o.isVisible()) return;\n      if (mtx && !o.fixed) {\n        o._matrix.initialize(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      } else if (cacheData && !o.fixed) {\n        o._matrix.initialize(cacheData.scale, 0, 0, cacheData.scale, cacheData.x * -1, cacheData.y * -1);\n      } else {\n        o._matrix.initialize(1, 0, 0, 1, 0, 0);\n      }\n      mtx = o._matrix;\n\n      // group 进行 cache canvas 内部的子元素需要进行appendTransform\n      // cache canvas 渲染不叠加自身的 transform，因为进入主渲染会进行appendTransform\n      if (inGroup || !cacheData) {\n        mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.originX, o.originY);\n      }\n      var ocg = o.clipGraphics;\n      if (ocg) {\n        ctx.beginPath();\n        ocg._matrix.copy(mtx);\n        ocg._matrix.appendTransform(ocg.x, ocg.y, ocg.scaleX, ocg.scaleY, ocg.rotation, ocg.skewX, ocg.skewY, ocg.originX, ocg.originY);\n        ctx.setTransform(ocg._matrix.a, ocg._matrix.b, ocg._matrix.c, ocg._matrix.d, ocg._matrix.tx, ocg._matrix.ty);\n        ocg.render(ctx);\n        ctx.clip(o.clipRuleNonzero ? 'nonzero' : 'evenodd');\n      }\n\n      var oacg = o.absClipGraphics;\n      if (oacg) {\n        ctx.beginPath();\n        oacg._matrix.initialize(1, 0, 0, 1, 0, 0);\n        oacg._matrix.appendTransform(oacg.x, oacg.y, oacg.scaleX, oacg.scaleY, oacg.rotation, oacg.skewX, oacg.skewY, oacg.originX, oacg.originY);\n        ctx.setTransform(oacg._matrix.a, oacg._matrix.b, oacg._matrix.c, oacg._matrix.d, oacg._matrix.tx, oacg._matrix.ty);\n        oacg.render(ctx);\n        ctx.clip(o.absClipRuleNonzero ? 'nonzero' : 'evenodd');\n      }\n\n      // if(!cacheData){\n      ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      // }\n      if (o._readyToCache || o.cacheUpdating) {\n        this.setComplexProps(ctx, o);\n        o._readyToCache = false;\n        o.cacheCtx.clearRect(0, 0, o.cacheCanvas.width, o.cacheCanvas.height);\n        o.cacheCtx.save();\n        this.render(o.cacheCtx, o, o._cacheData);\n        o.cacheCtx.restore();\n        // debug cacheCanvas\n        // document.body.appendChild(o.cacheCanvas)\n        if (o._readyToFilter) {\n          o.cacheCtx.putImageData((0, _index.filter)(o.cacheCtx.getImageData(0, 0, o.cacheCanvas.width, o.cacheCanvas.height), o._filterName), 0, 0);\n          this._readyToFilter = false;\n        }\n\n        ctx.drawImage(o.cacheCanvas, o._cacheData.x, o._cacheData.y);\n      } else if (o.cacheCanvas && !cacheData) {\n        this.setComplexProps(ctx, o);\n        ctx.drawImage(o.cacheCanvas, o._cacheData.x, o._cacheData.y);\n      } else if (o instanceof _group2.default) {\n        var list = o.children.slice(0),\n            l = list.length;\n        for (var i = 0; i < l; i++) {\n          ctx.save();\n          this._render(ctx, list[i], mtx);\n          ctx.restore();\n        }\n      } else if (o instanceof _graphics2.default) {\n        this.setComplexProps(ctx, o);\n        o.render(ctx);\n      } else if (o instanceof _sprite2.default && o.rect) {\n        this.setComplexProps(ctx, o);\n        o.updateFrame();\n        var rect = o.rect;\n        ctx.drawImage(o.img, rect[0], rect[1], rect[2], rect[3], 0, 0, rect[2], rect[3]);\n      } else if (o instanceof _bitmap2.default && o.rect) {\n        this.setComplexProps(ctx, o);\n        var bRect = o.rect;\n        ctx.drawImage(o.img, bRect[0], bRect[1], bRect[2], bRect[3], 0, 0, bRect[2], bRect[3]);\n      } else if (o instanceof _text2.default) {\n        this.setComplexProps(ctx, o);\n        ctx.font = o.font;\n        ctx.fillStyle = o.color;\n        ctx.textAlign = o.textAlign;\n        ctx.textBaseline = o.baseline;\n        ctx.fillText(o.text, 0, 0);\n      }\n    }\n  }, {\n    key: 'setComplexProps',\n    value: function setComplexProps(ctx, o) {\n      o.complexCompositeOperation = ctx.globalCompositeOperation = this.getCompositeOperation(o);\n      o.complexAlpha = ctx.globalAlpha = this.getAlpha(o, 1);\n\n      o.complexShadow = this.getShadow(o);\n      if (o.complexShadow) {\n        ctx.shadowColor = o.complexShadow.color;\n        ctx.shadowOffsetX = o.complexShadow.offsetX;\n        ctx.shadowOffsetY = o.complexShadow.offsetY;\n        ctx.shadowBlur = o.complexShadow.blur;\n      }\n    }\n  }, {\n    key: 'getCompositeOperation',\n    value: function getCompositeOperation(o) {\n      if (o.compositeOperation) return o.compositeOperation;\n      if (o.parent) return this.getCompositeOperation(o.parent);\n    }\n  }, {\n    key: 'getAlpha',\n    value: function getAlpha(o, alpha) {\n      var result = o.alpha * alpha;\n      if (o.parent) {\n        return this.getAlpha(o.parent, result);\n      }\n      return result;\n    }\n  }, {\n    key: 'getShadow',\n    value: function getShadow(o) {\n      if (o.shadow) return o.shadow;\n      if (o.parent) return this.getShadow(o.parent);\n    }\n  }]);\n\n  return CanvasRender;\n}(_render3.default);\n\nexports.default = CanvasRender;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filter = filter;\n\nvar _invert = __webpack_require__(27);\n\nvar _blur = __webpack_require__(28);\n\nvar _brightness = __webpack_require__(30);\n\nvar _contrast = __webpack_require__(31);\n\nvar _grayscale = __webpack_require__(32);\n\nvar _sepia = __webpack_require__(33);\n\nvar _threshold = __webpack_require__(34);\n\nvar _gamma = __webpack_require__(35);\n\nvar _colorize = __webpack_require__(36);\n\nfunction filter(pixels, name) {\n  if (typeof name === 'string') {\n    var type = name.split('(')[0];\n    var num = getNumber(name);\n    switch (type) {\n      case 'invert':\n        return (0, _invert.invert)(pixels, num);\n      case 'brightness':\n        return (0, _brightness.brightness)(pixels, -255 + num * 255);\n      case 'blur':\n        return (0, _blur.blur)(pixels, num);\n      case 'contrast':\n        return (0, _contrast.contrast)(pixels, -255 + num * 255);\n      case 'grayscale':\n        return (0, _grayscale.grayscale)(pixels, num);\n      case 'sepia':\n        return (0, _sepia.sepia)(pixels, num);\n      case 'threshold':\n        return (0, _threshold.threshold)(pixels, num);\n      case 'gamma':\n        return (0, _gamma.gamma)(pixels, num);\n    }\n  } else {\n    switch (name.type) {\n      case 'colorize':\n        return (0, _colorize.colorize)(pixels, name);\n    }\n  }\n}\n\nfunction getNumber(str) {\n  str = str.replace(/(invert)|(brightness)|(blur)|(contrast)|(grayscale)|(sepia)|(threshold)|(gamma)?\\(/g, '').replace(')', '');\n  if (str.indexOf('%') !== -1) {\n    return Number(str.replace('%', '')) / 100;\n  } else if (str.indexOf('px') !== -1) {\n    return Number(str.replace('px', ''));\n  } else {\n    return Number(str);\n  }\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invert = invert;\nfunction invert(pixels, ratio) {\n  var d = pixels.data;\n  ratio = ratio === undefined ? 1 : ratio;\n  for (var i = 0; i < d.length; i += 4) {\n    d[i] = d[i] + ratio * (255 - 2 * d[i]);\n    d[i + 1] = d[i + 1] + ratio * (255 - 2 * d[i + 1]);\n    d[i + 2] = d[i + 2] + ratio * (255 - 2 * d[i + 2]);\n  }\n  return pixels;\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blur = blur;\n\nvar _createImageData = __webpack_require__(29);\n\nfunction blur(pixels, diameter) {\n  diameter = Math.abs(diameter);\n  if (diameter <= 1) return pixels;\n  var radius = diameter / 2;\n  var len = Math.ceil(diameter) + (1 - Math.ceil(diameter) % 2);\n  var weights = new Float32Array(len);\n  var rho = (radius + 0.5) / 3;\n  var rhoSq = rho * rho;\n  var gaussianFactor = 1 / Math.sqrt(2 * Math.PI * rhoSq);\n  var rhoFactor = -1 / (2 * rho * rho);\n  var wsum = 0;\n  var middle = Math.floor(len / 2);\n  for (var i = 0; i < len; i++) {\n    var x = i - middle;\n    var gx = gaussianFactor * Math.exp(x * x * rhoFactor);\n    weights[i] = gx;\n    wsum += gx;\n  }\n  for (var i = 0; i < weights.length; i++) {\n    weights[i] /= wsum;\n  }\n  return separableConvolve(pixels, weights, weights, false);\n}\n\nfunction separableConvolve(pixels, horizWeights, vertWeights, opaque) {\n  return horizontalConvolve(verticalConvolve(pixels, vertWeights, opaque), horizWeights, opaque);\n}\n\nfunction horizontalConvolve(pixels, weightsVector, opaque) {\n  var side = weightsVector.length;\n  var halfSide = Math.floor(side / 2);\n\n  var src = pixels.data;\n  var sw = pixels.width;\n  var sh = pixels.height;\n\n  var w = sw;\n  var h = sh;\n  var output = (0, _createImageData.createImageData)(w, h);\n  var dst = output.data;\n\n  var alphaFac = opaque ? 1 : 0;\n\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      var sy = y;\n      var sx = x;\n      var dstOff = (y * w + x) * 4;\n      var r = 0,\n          g = 0,\n          b = 0,\n          a = 0;\n      for (var cx = 0; cx < side; cx++) {\n        var scy = sy;\n        var scx = Math.min(sw - 1, Math.max(0, sx + cx - halfSide));\n        var srcOff = (scy * sw + scx) * 4;\n        var wt = weightsVector[cx];\n        r += src[srcOff] * wt;\n        g += src[srcOff + 1] * wt;\n        b += src[srcOff + 2] * wt;\n        a += src[srcOff + 3] * wt;\n      }\n      dst[dstOff] = r;\n      dst[dstOff + 1] = g;\n      dst[dstOff + 2] = b;\n      dst[dstOff + 3] = a + alphaFac * (255 - a);\n    }\n  }\n  return output;\n}\n\nfunction verticalConvolve(pixels, weightsVector, opaque) {\n  var side = weightsVector.length;\n  var halfSide = Math.floor(side / 2);\n\n  var src = pixels.data;\n  var sw = pixels.width;\n  var sh = pixels.height;\n\n  var w = sw;\n  var h = sh;\n  var output = (0, _createImageData.createImageData)(w, h);\n  var dst = output.data;\n\n  var alphaFac = opaque ? 1 : 0;\n\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      var sy = y;\n      var sx = x;\n      var dstOff = (y * w + x) * 4;\n      var r = 0,\n          g = 0,\n          b = 0,\n          a = 0;\n      for (var cy = 0; cy < side; cy++) {\n        var scy = Math.min(sh - 1, Math.max(0, sy + cy - halfSide));\n        var scx = sx;\n        var srcOff = (scy * sw + scx) * 4;\n        var wt = weightsVector[cy];\n        r += src[srcOff] * wt;\n        g += src[srcOff + 1] * wt;\n        b += src[srcOff + 2] * wt;\n        a += src[srcOff + 3] * wt;\n      }\n      dst[dstOff] = r;\n      dst[dstOff + 1] = g;\n      dst[dstOff + 2] = b;\n      dst[dstOff + 3] = a + alphaFac * (255 - a);\n    }\n  }\n  return output;\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createImageData = createImageData;\nvar tmpCtx = null;\n\nif (typeof document !== 'undefined') {\n  tmpCtx = document.createElement('canvas').getContext('2d');\n} else if (typeof wx !== 'undefined' && wx.createCanvas) {\n  tmpCtx = wx.createCanvas().getContext('2d');\n}\n\nfunction createImageData(w, h) {\n  return tmpCtx.createImageData(w, h);\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.brightness = brightness;\nfunction brightness(pixels, adjustment) {\n  var data = pixels.data;\n  var length = data.length;\n  for (var i = 0; i < length; i += 4) {\n    data[i] += adjustment;\n    data[i + 1] += adjustment;\n    data[i + 2] += adjustment;\n  }\n  return pixels;\n}\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.contrast = contrast;\nfunction contrast(pixels, contrast) {\n  var data = pixels.data;\n  var length = data.length;\n  var factor = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n  for (var i = 0; i < length; i += 4) {\n    data[i] = factor * (data[i] - 128) + 128;\n    data[i + 1] = factor * (data[i + 1] - 128) + 128;\n    data[i + 2] = factor * (data[i + 2] - 128) + 128;\n  }\n\n  return pixels;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grayscale = grayscale;\nfunction grayscale(pixels, adjustment) {\n  var data = pixels.data;\n  var length = data.length;\n  for (var i = 0; i < length; i += 4) {\n    var r = data[i];\n    var g = data[i + 1];\n    var b = data[i + 2];\n\n    // CIE luminance for the RGB\n    // The human eye is bad at seeing red and blue, so we de-emphasize them.\n    var v = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    data[i] = r + (v - r) * adjustment;\n    data[i + 1] = g + (v - g) * adjustment;\n    data[i + 2] = b + (v - b) * adjustment;\n  }\n  return pixels;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sepia = sepia;\nfunction sepia(pixels, adjustment) {\n  var data = pixels.data;\n  var length = data.length;\n  for (var i = 0; i < length; i += 4) {\n    var r = data[i];\n    var g = data[i + 1];\n    var b = data[i + 2];\n\n    var sr = r * 0.393 + g * 0.769 + b * 0.189;\n    var sg = r * 0.349 + g * 0.686 + b * 0.168;\n    var sb = r * 0.272 + g * 0.534 + b * 0.131;\n\n    data[i] = r + (sr - r) * adjustment;\n    data[i + 1] = g + (sg - g) * adjustment;\n    data[i + 2] = b + (sb - b) * adjustment;\n  }\n\n  return pixels;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.threshold = threshold;\nfunction threshold(pixels, threshold) {\n  var data = pixels.data;\n  var length = data.length;\n  for (var i = 0; i < length; i += 4) {\n    var r = data[i];\n    var g = data[i + 1];\n    var b = data[i + 2];\n    var v = 0.2126 * r + 0.7152 * g + 0.0722 * b >= threshold ? 255 : 0;\n    data[i] = data[i + 1] = data[i + 2] = v;\n  }\n  return pixels;\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gamma = gamma;\nfunction gamma(pixels, adjustment) {\n  var data = pixels.data;\n  var length = data.length;\n  for (var i = 0; i < length; i += 4) {\n    data[i] = Math.pow(data[i] / 255, adjustment) * 255;\n    data[i + 1] = Math.pow(data[i + 1] / 255, adjustment) * 255;\n    data[i + 2] = Math.pow(data[i + 2] / 255, adjustment) * 255;\n  }\n  return pixels;\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorize = colorize;\nfunction colorize(pixels, option) {\n  var data = pixels.data;\n  var length = data.length;\n  var hex = option.color.charAt(0) === '#' ? option.color.substr(1) : option.color;\n  var colorRGB = {\n    r: parseInt(hex.substr(0, 2), 16),\n    g: parseInt(hex.substr(2, 2), 16),\n    b: parseInt(hex.substr(4, 2), 16)\n  };\n\n  for (var i = 0; i < length; i += 4) {\n    data[i] -= (data[i] - colorRGB.r) * option.amount;\n    data[i + 1] -= (data[i + 1] - colorRGB.g) * option.amount;\n    data[i + 2] -= (data[i + 2] - colorRGB.b) * option.amount;\n  }\n\n  return pixels;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _graphics = __webpack_require__(4);\n\nvar _graphics2 = _interopRequireDefault(_graphics);\n\nvar _render = __webpack_require__(8);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _event = __webpack_require__(7);\n\nvar _event2 = _interopRequireDefault(_event);\n\nvar _sprite = __webpack_require__(6);\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _bitmap = __webpack_require__(2);\n\nvar _bitmap2 = _interopRequireDefault(_bitmap);\n\nvar _text = __webpack_require__(5);\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HitRender = function (_Render) {\n  _inherits(HitRender, _Render);\n\n  function HitRender() {\n    _classCallCheck(this, HitRender);\n\n    var _this = _possibleConstructorReturn(this, (HitRender.__proto__ || Object.getPrototypeOf(HitRender)).call(this));\n\n    if (typeof wx !== 'undefined' && wx.createCanvas) {\n      _this.canvas = wx.createCanvas();\n    } else {\n      _this.canvas = document.createElement('canvas');\n    }\n\n    _this.canvas.width = 1;\n    _this.canvas.height = 1;\n    _this.ctx = _this.canvas.getContext('2d');\n\n    // debug event\n    // this.canvas.width = 441\n    // this.canvas.height = 441\n    // this.ctx = this.canvas.getContext('2d')\n    // document.body.appendChild(this.canvas)\n\n    _this.disableEvents = ['mouseover', 'mouseout', 'mousemove', 'touchmove'];\n    return _this;\n  }\n\n  _createClass(HitRender, [{\n    key: 'clear',\n    value: function clear() {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n    }\n  }, {\n    key: 'hitAABB',\n    value: function hitAABB(o, evt) {\n      var list = o.children.slice(0),\n          l = list.length;\n      for (var i = l - 1; i >= 0; i--) {\n        var child = list[i];\n        // if (!this.isbindingEvent(child)) continue;\n        var target = this._hitAABB(child, evt);\n        if (target) return target;\n      }\n    }\n  }, {\n    key: '_hitAABB',\n    value: function _hitAABB(o, evt) {\n      if (o.ignoreHit || !o.isVisible()) {\n        return;\n      }\n      if (o instanceof _group2.default) {\n        var list = o.children.slice(0),\n            l = list.length;\n        for (var i = l - 1; i >= 0; i--) {\n          var child = list[i];\n          var target = this._hitAABB(child, evt);\n          if (target) return target;\n        }\n      } else {\n        if (o.AABB && this.checkPointInAABB(evt.stageX, evt.stageY, o.AABB)) {\n          // this._bubbleEvent(o, type, evt);\n          this._dispatchEvent(o, evt);\n          return o;\n        }\n      }\n    }\n  }, {\n    key: 'checkPointInAABB',\n    value: function checkPointInAABB(x, y, AABB) {\n      var minX = AABB[0];\n      if (x < minX) return false;\n      var minY = AABB[1];\n      if (y < minY) return false;\n      var maxX = minX + AABB[2];\n      if (x > maxX) return false;\n      var maxY = minY + AABB[3];\n      if (y > maxY) return false;\n      return true;\n    }\n  }, {\n    key: 'hitPixel',\n    value: function hitPixel(o, evt) {\n      var ctx = this.ctx;\n      ctx.clearRect(0, 0, 2, 2);\n      var mtx = o._hitMatrix;\n      var list = o.children.slice(0),\n          l = list.length;\n      for (var i = l - 1; i >= 0; i--) {\n        var child = list[i];\n        mtx.initialize(1, 0, 0, 1, 0, 0);\n        mtx.appendTransform(o.x - evt.stageX, o.y - evt.stageY, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.originX, o.originY);\n        // if (!this.checkBoundEvent(child)) continue\n        ctx.save();\n        var target = this._hitPixel(child, evt, mtx);\n        ctx.restore();\n        if (target) return target;\n      }\n    }\n  }, {\n    key: '_hitPixel',\n    value: function _hitPixel(o, evt, mtx) {\n      if (o.ignoreHit || !o.isVisible()) return;\n      var ctx = this.ctx;\n      if (mtx && !o.fixed) {\n        o._hitMatrix.initialize(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      } else {\n        o._hitMatrix.initialize(1, 0, 0, 1, 0, 0);\n      }\n      mtx = o._hitMatrix;\n      mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.originX, o.originY);\n\n      var ocg = o.clipGraphics;\n      if (ocg) {\n        ctx.beginPath();\n        ocg._matrix.copy(mtx);\n        ocg._matrix.appendTransform(ocg.x, ocg.y, ocg.scaleX, ocg.scaleY, ocg.rotation, ocg.skewX, ocg.skewY, ocg.originX, ocg.originY);\n        ctx.setTransform(ocg._matrix.a, ocg._matrix.b, ocg._matrix.c, ocg._matrix.d, ocg._matrix.tx, ocg._matrix.ty);\n        ocg.render(ctx);\n        ctx.clip(o.clipRuleNonzero ? 'nonzero' : 'evenodd');\n      }\n\n      var oacg = o.absClipGraphics;\n      if (oacg) {\n        ctx.beginPath();\n        oacg._matrix.initialize(1, 0, 0, 1, 0, 0);\n        oacg._matrix.appendTransform(oacg.x, oacg.y, oacg.scaleX, oacg.scaleY, oacg.rotation, oacg.skewX, oacg.skewY, oacg.originX, oacg.originY);\n        ctx.setTransform(oacg._matrix.a, oacg._matrix.b, oacg._matrix.c, oacg._matrix.d, oacg._matrix.tx, oacg._matrix.ty);\n        oacg.render(ctx);\n        ctx.clip(o.absClipRuleNonzero ? 'nonzero' : 'evenodd');\n      }\n\n      if (o.cacheCanvas) {\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n        ctx.drawImage(o.cacheCanvas, o._cacheData.x, o._cacheData.y);\n      } else if (o instanceof _group2.default) {\n        var list = o.children.slice(0),\n            l = list.length;\n        for (var i = l - 1; i >= 0; i--) {\n          ctx.save();\n          var target = this._hitPixel(list[i], evt, mtx);\n          ctx.restore();\n          if (target) return target;\n        }\n      } else {\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n        if (o instanceof _graphics2.default) {\n          this.setComplexProps(ctx, o);\n\n          o.render(ctx);\n        } else if (o instanceof _sprite2.default && o.rect) {\n          this.setComplexProps(ctx, o);\n\n          o.updateFrame();\n          var rect = o.rect;\n          ctx.drawImage(o.img, rect[0], rect[1], rect[2], rect[3], 0, 0, rect[2], rect[3]);\n        } else if (o instanceof _bitmap2.default && o.rect) {\n          this.setComplexProps(ctx, o);\n\n          var bRect = o.rect;\n          ctx.drawImage(o.img, bRect[0], bRect[1], bRect[2], bRect[3], 0, 0, bRect[2], bRect[3]);\n        } else if (o instanceof _text2.default) {\n          this.setComplexProps(ctx, o);\n\n          ctx.font = o.font;\n          ctx.fillStyle = o.color;\n          ctx.textAlign = o.textAlign;\n          ctx.textBaseline = o.baseline;\n          ctx.fillText(o.text, 0, 0);\n        }\n      }\n\n      if (ctx.getImageData(0, 0, 1, 1).data[3] > 1) {\n        this._dispatchEvent(o, evt);\n        return o;\n      }\n    }\n  }, {\n    key: 'setComplexProps',\n    value: function setComplexProps(ctx, o) {\n      ctx.globalCompositeOperation = o.complexCompositeOperation;\n      ctx.globalAlpha = o.complexAlpha;\n      // The shadow does not trigger the event, so remove it\n      // if(o.complexShadow){\n      //   ctx.shadowColor = o.complexShadow.color\n      //   ctx.shadowOffsetX = o.complexShadow.offsetX\n      //   ctx.shadowOffsetY = o.complexShadow.offsetY\n      //   ctx.shadowBlur = o.complexShadow.blur\n      // }\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent(obj, evt) {\n      if (this.disableEvents.indexOf(evt.type) !== -1) return;\n      var mockEvt = new _event2.default();\n      mockEvt.stageX = evt.stageX;\n      mockEvt.stageY = evt.stageY;\n      mockEvt.pureEvent = evt;\n      mockEvt.type = evt.type;\n      obj.dispatchEvent(mockEvt);\n    }\n  }]);\n\n  return HitRender;\n}(_render2.default);\n\nexports.default = HitRender;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _graphics = __webpack_require__(4);\n\nvar _graphics2 = _interopRequireDefault(_graphics);\n\nvar _render = __webpack_require__(8);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _event = __webpack_require__(7);\n\nvar _event2 = _interopRequireDefault(_event);\n\nvar _sprite = __webpack_require__(6);\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _bitmap = __webpack_require__(2);\n\nvar _bitmap2 = _interopRequireDefault(_bitmap);\n\nvar _text = __webpack_require__(5);\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WxHitRender = function (_Render) {\n  _inherits(WxHitRender, _Render);\n\n  function WxHitRender(ctx, component, canvasId) {\n    _classCallCheck(this, WxHitRender);\n\n    var _this = _possibleConstructorReturn(this, (WxHitRender.__proto__ || Object.getPrototypeOf(WxHitRender)).call(this));\n\n    _this.ctx = ctx;\n    _this._isWeapp = true;\n    _this._component = component;\n    _this._hitCanvasId = canvasId + 'Hit';\n\n    _this.disableEvents = ['mouseover', 'mouseout', 'mousemove', 'touchmove'];\n    return _this;\n  }\n\n  _createClass(WxHitRender, [{\n    key: 'clear',\n    value: function clear() {\n      this.ctx.clearRect(0, 0, 2, 2);\n    }\n  }, {\n    key: 'hitAABB',\n    value: function hitAABB(list, evt, cb) {\n      var len = list.length;\n      for (var i = len - 1; i >= 0; i--) {\n        var o = list[i];\n\n        if (o.AABB && this.checkPointInAABB(evt.stageX, evt.stageY, o.AABB)) {\n          this._dispatchEvent(o, evt);\n          cb(o);\n          return o;\n        }\n      }\n    }\n  }, {\n    key: 'checkPointInAABB',\n    value: function checkPointInAABB(x, y, AABB) {\n      var minX = AABB[0];\n      if (x < minX) return false;\n      var minY = AABB[1];\n      if (y < minY) return false;\n      var maxX = minX + AABB[2];\n      if (x > maxX) return false;\n      var maxY = minY + AABB[3];\n      if (y > maxY) return false;\n      return true;\n    }\n  }, {\n    key: 'hit',\n    value: function hit(list, evt, cb, current) {\n      var _this2 = this;\n\n      var ctx = this.ctx;\n      var obj = list[current];\n      var mtx = obj._hitMatrix.initialize(1, 0, 0, 1, 0, 0);\n      ctx.save();\n      mtx.appendTransform(obj.x - evt.stageX, obj.y - evt.stageY, obj.scaleX, obj.scaleY, obj.rotation, obj.skewX, obj.skewY, obj.originX, obj.originY);\n      ctx.globalCompositeOperation = obj.complexCompositeOperation;\n      ctx.globalAlpha = obj.complexAlpha;\n      ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      if (obj instanceof _graphics2.default) {\n        obj.render(ctx);\n      } else if (obj instanceof _sprite2.default && obj.rect) {\n        obj.updateFrame();\n        var rect = obj.rect;\n        ctx.drawImage(obj.img, rect[0], rect[1], rect[2], rect[3], 0, 0, rect[2], rect[3]);\n      } else if (obj instanceof _bitmap2.default && obj.rect) {\n        var bRect = obj.rect;\n        ctx.drawImage(obj.img, bRect[0], bRect[1], bRect[2], bRect[3], 0, 0, bRect[2], bRect[3]);\n      } else if (obj instanceof _text2.default) {\n        ctx.font = obj.font;\n        ctx.fillStyle = obj.color;\n        ctx.textAlign = obj.textAlign;\n        ctx.fillText(obj.text, 0, 0);\n      }\n      ctx.restore();\n      current--;\n      ctx.draw(false, function () {\n        wx.canvasGetImageData({\n          canvasId: _this2._hitCanvasId,\n          x: 0,\n          y: 0,\n          width: 1,\n          height: 1,\n          success: function success(res) {\n            if (res.data[3] > 1) {\n              _this2._dispatchEvent(obj, evt);\n              cb(obj);\n            } else {\n              if (current > -1) {\n                _this2.hit(list, evt, cb, current);\n              }\n            }\n          }\n        }, _this2._component);\n      });\n    }\n  }, {\n    key: '_dispatchEvent',\n    value: function _dispatchEvent(obj, evt) {\n      if (this.disableEvents.indexOf(evt.type) !== -1) return;\n      var mockEvt = new _event2.default();\n      mockEvt.stageX = evt.stageX;\n      mockEvt.stageY = evt.stageY;\n      mockEvt.pureEvent = evt;\n      mockEvt.type = evt.type;\n      obj.dispatchEvent(mockEvt);\n    }\n  }]);\n\n  return WxHitRender;\n}(_render2.default);\n\nexports.default = WxHitRender;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ArrowPath = function (_Shape) {\n  _inherits(ArrowPath, _Shape);\n\n  function ArrowPath(path, option) {\n    _classCallCheck(this, ArrowPath);\n\n    var _this = _possibleConstructorReturn(this, (ArrowPath.__proto__ || Object.getPrototypeOf(ArrowPath)).call(this));\n\n    _this.path = path;\n    _this.option = Object.assign({\n      strokeStyle: 'black',\n      lineWidth: 1,\n      headSize: 10\n    }, option);\n    return _this;\n  }\n\n  _createClass(ArrowPath, [{\n    key: 'draw',\n    value: function draw() {\n      var path = this.path;\n      this.beginPath();\n      var len = path.length;\n      if (len === 2) {\n        this.drawArrow(path[0].x, path[0].y, path[1].x, path[1].y, 30);\n      } else {\n        this.moveTo(path[0].x, path[0].y);\n        for (var i = 1; i < len - 1; i++) {\n          this.lineTo(path[i].x, path[i].y);\n        }\n        this.drawArrow(path[len - 2].x, path[len - 2].y, path[len - 1].x, path[len - 1].y, 30);\n      }\n\n      this.stroke();\n    }\n  }, {\n    key: 'drawArrow',\n    value: function drawArrow(fromX, fromY, toX, toY, theta) {\n      var angle = Math.atan2(fromY - toY, fromX - toX) * 180 / Math.PI,\n          angle1 = (angle + theta) * Math.PI / 180,\n          angle2 = (angle - theta) * Math.PI / 180,\n          hs = this.option.headSize,\n          topX = hs * Math.cos(angle1),\n          topY = hs * Math.sin(angle1),\n          botX = hs * Math.cos(angle2),\n          botY = hs * Math.sin(angle2);\n\n      var arrowX = fromX - topX,\n          arrowY = fromY - topY;\n\n      this.moveTo(arrowX, arrowY);\n      this.moveTo(fromX, fromY);\n      this.lineTo(toX, toY);\n      arrowX = toX + topX;\n      arrowY = toY + topY;\n      this.moveTo(arrowX, arrowY);\n      this.lineTo(toX, toY);\n      arrowX = toX + botX;\n      arrowY = toY + botY;\n      this.lineTo(arrowX, arrowY);\n      this.strokeStyle(this.option.strokeStyle);\n      this.lineWidth(this.option.lineWidth);\n    }\n  }]);\n\n  return ArrowPath;\n}(_shape2.default);\n\nexports.default = ArrowPath;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ellipse = function (_Shape) {\n  _inherits(Ellipse, _Shape);\n\n  function Ellipse(width, height, option) {\n    _classCallCheck(this, Ellipse);\n\n    var _this = _possibleConstructorReturn(this, (Ellipse.__proto__ || Object.getPrototypeOf(Ellipse)).call(this));\n\n    _this.option = option || {};\n    _this.width = width;\n    _this.height = height;\n    return _this;\n  }\n\n  _createClass(Ellipse, [{\n    key: 'draw',\n    value: function draw() {\n      var w = this.width;\n      var h = this.height;\n      var k = 0.5522848;\n      var ox = w / 2 * k;\n      var oy = h / 2 * k;\n      var xe = w;\n      var ye = h;\n      var xm = w / 2;\n      var ym = h / 2;\n\n      this.beginPath();\n      this.moveTo(0, ym);\n      this.bezierCurveTo(0, ym - oy, xm - ox, 0, xm, 0);\n      this.bezierCurveTo(xm + ox, 0, xe, ym - oy, xe, ym);\n      this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      this.bezierCurveTo(xm - ox, ye, 0, ym + oy, 0, ym);\n\n      if (this.option.strokeStyle) {\n        if (this.option.lineWidth !== undefined) {\n          this.lineWidth(this.option.lineWidth);\n        }\n        this.strokeStyle(this.option.strokeStyle);\n        this.stroke();\n      }\n\n      if (this.option.fillStyle) {\n        this.fillStyle(this.option.fillStyle);\n        this.fill();\n      }\n    }\n  }]);\n\n  return Ellipse;\n}(_shape2.default);\n\nexports.default = Ellipse;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pathParser = __webpack_require__(42);\n\nvar _pathParser2 = _interopRequireDefault(_pathParser);\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nvar _arcToBezier = __webpack_require__(43);\n\nvar _arcToBezier2 = _interopRequireDefault(_arcToBezier);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Path = function (_Shape) {\n  _inherits(Path, _Shape);\n\n  function Path(d, option) {\n    _classCallCheck(this, Path);\n\n    var _this = _possibleConstructorReturn(this, (Path.__proto__ || Object.getPrototypeOf(Path)).call(this));\n\n    _this.d = d;\n\n    option = Object.assign({\n      lineWidth: 1\n    }, option);\n    _this.option = option;\n    return _this;\n  }\n\n  _createClass(Path, [{\n    key: 'draw',\n    value: function draw() {\n      var _this2 = this;\n\n      var cmds = (0, _pathParser2.default)(this.d);\n\n      this.beginPath();\n      // https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n      // M = moveto\n      // L = lineto\n      // H = horizontal lineto\n      // V = vertical lineto\n      // C = curveto\n      // S = smooth curveto\n      // Q = quadratic Belzier curve\n      // T = smooth quadratic Belzier curveto\n      // A = elliptical Arc  暂时未实现，用贝塞尔拟合椭圆\n      // Z = closepath\n      // 以上所有命令均允许小写字母。大写表示绝对定位，小写表示相对定位(从上一个点开始)。\n      var preX = void 0,\n          preY = void 0,\n          curves = void 0,\n          lastCurve = void 0;\n\n      // 参考我的 pasition https://github.com/AlloyTeam/pasition/blob/master/src/index.js\n      for (var j = 0, cmdLen = cmds.length; j < cmdLen; j++) {\n        var item = cmds[j];\n        var action = item[0];\n        var preItem = cmds[j - 1];\n\n        switch (action) {\n          case 'M':\n            preX = item[1];\n            preY = item[2];\n            this.moveTo(preX, preY);\n            break;\n          case 'L':\n            preX = item[1];\n            preY = item[2];\n            this.lineTo(preX, preY);\n            break;\n          case 'H':\n            preX = item[1];\n            this.lineTo(preX, preY);\n            break;\n          case 'V':\n            preY = item[1];\n            this.lineTo(preX, preY);\n            break;\n          case 'C':\n            preX = item[5];\n            preY = item[6];\n            this.bezierCurveTo(item[1], item[2], item[3], item[4], preX, preY);\n            break;\n          case 'S':\n\n            if (preItem[0] === 'C' || preItem[0] === 'c') {\n              this.bezierCurveTo(preX + preItem[5] - preItem[3], preY + preItem[6] - preItem[4], item[1], item[2], item[3], item[4]);\n            } else if (preItem[0] === 'S' || preItem[0] === 's') {\n              this.bezierCurveTo(preX + preItem[3] - preItem[1], preY + preItem[4] - preItem[2], item[1], item[2], item[3], item[4]);\n            }\n            preX = item[3];\n            preY = item[4];\n            break;\n\n          case 'Q':\n            preX = item[3];\n            preY = item[4];\n            this.quadraticCurveTo(item[1], item[2], preX, preY);\n            break;\n\n          case 'm':\n            preX += item[1];\n            preY += item[2];\n            this.moveTo(preX, preY);\n            break;\n          case 'l':\n            preX += item[1];\n            preY += item[2];\n            this.lineTo(preX, preY);\n            break;\n          case 'h':\n            preX += item[1];\n            this.lineTo(preX, preY);\n            break;\n          case 'v':\n            preY += item[1];\n            this.lineTo(preX, preY);\n            break;\n          case 'c':\n            this.bezierCurveTo(preX + item[1], preY + item[2], preX + item[3], preY + item[4], preX + item[5], preY + item[6]);\n            preX = preX + item[5];\n            preY = preY + item[6];\n            break;\n          case 's':\n            if (preItem[0] === 'C' || preItem[0] === 'c') {\n              this.bezierCurveTo(preX + preItem[5] - preItem[3], preY + preItem[6] - preItem[4], preX + item[1], preY + item[2], preX + item[3], preY + item[4]);\n            } else if (preItem[0] === 'S' || preItem[0] === 's') {\n              this.bezierCurveTo(preX + preItem[3] - preItem[1], preY + preItem[4] - preItem[2], preX + item[1], preY + item[2], preX + item[3], preY + item[4]);\n            }\n\n            preX += item[3];\n            preY += item[4];\n            break;\n          case 'q':\n\n            this.quadraticCurveTo(preX + item[1], preY + item[2], item[3] + preX, item[4] + preY);\n            preX += item[3];\n            preY += item[4];\n            break;\n          case 'Z':\n            this.closePath();\n            break;\n          case 'z':\n            this.closePath();\n            break;\n\n          case 'a':\n            curves = (0, _arcToBezier2.default)({\n              rx: item[1],\n              ry: item[2],\n              px: preX,\n              py: preY,\n              xAxisRotation: item[3],\n              largeArcFlag: item[4],\n              sweepFlag: item[5],\n              cx: preX + item[6],\n              cy: preX + item[7]\n            });\n            lastCurve = curves[curves.length - 1];\n\n            curves.forEach(function (curve, index) {\n              if (index === 0) {\n                _this2.moveTo(preX, preY);\n                _this2.bezierCurveTo(curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y);\n              } else {\n                //curves[index - 1].x, curves[index - 1].y, \n                _this2.bezierCurveTo(curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y);\n              }\n            });\n\n            preX = lastCurve.x;\n            preY = lastCurve.y;\n\n            break;\n\n          case 'A':\n\n            curves = (0, _arcToBezier2.default)({\n              rx: item[1],\n              ry: item[2],\n              px: preX,\n              py: preY,\n              xAxisRotation: item[3],\n              largeArcFlag: item[4],\n              sweepFlag: item[5],\n              cx: item[6],\n              cy: item[7]\n            });\n            lastCurve = curves[curves.length - 1];\n\n            curves.forEach(function (curve, index) {\n              if (index === 0) {\n                _this2.moveTo(preX, preY);\n                _this2.bezierCurveTo(curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y);\n              } else {\n                //curves[index - 1].x, curves[index - 1].y\n                _this2.bezierCurveTo(curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y);\n              }\n            });\n\n            preX = lastCurve.x;\n            preY = lastCurve.y;\n\n            break;\n\n          case 'T':\n\n            if (preItem[0] === 'Q' || preItem[0] === 'q') {\n              preCX = preX + preItem[3] - preItem[1];\n              preCY = preY + preItem[4] - preItem[2];\n              this.quadraticCurveTo(preX, preY, preCX, preCY, item[1], item[2]);\n            } else if (preItem[0] === 'T' || preItem[0] === 't') {\n              this.quadraticCurveTo(preX, preY, preX + preX - preCX, preY + preY - preCY, item[1], item[2]);\n              preCX = preX + preX - preCX;\n              preCY = preY + preY - preCY;\n            }\n\n            preX = item[1];\n            preY = item[2];\n            break;\n\n          case 't':\n            if (preItem[0] === 'Q' || preItem[0] === 'q') {\n              preCX = preX + preItem[3] - preItem[1];\n              preCY = preY + preItem[4] - preItem[2];\n              this.quadraticCurveTo(preX, preY, preCX, preCY, preX + item[1], preY + item[2]);\n            } else if (preItem[0] === 'T' || preItem[0] === 't') {\n              this.quadraticCurveTo(preX, preY, preX + preX - preCX, preY + preY - preCY, preX + item[1], preY + item[2]);\n              preCX = preX + preX - preCX;\n              preCY = preY + preY - preCY;\n            }\n\n            preX += item[1];\n            preY += item[2];\n            break;\n        }\n      }\n      if (this.option.fillStyle) {\n        this.fillStyle(this.option.fillStyle);\n        this.fill();\n      }\n\n      if (this.option.strokeStyle) {\n        this.lineWidth(this.option.lineWidth);\n        this.strokeStyle(this.option.strokeStyle);\n        this.stroke();\n      }\n    }\n  }]);\n\n  return Path;\n}(_shape2.default);\n\nexports.default = Path;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// https://github.com/jkroso/parse-svg-path/blob/master/index.js\n/**\r\n * expected argument lengths\r\n * @type {Object}\r\n */\n\nvar length = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0\n\n  /**\r\n   * segment pattern\r\n   * @type {RegExp}\r\n   */\n\n};var segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig;\n\n/**\r\n * parse an svg path data string. Generates an Array\r\n * of commands where each command is an Array of the\r\n * form `[command, arg1, arg2, ...]`\r\n *\r\n * @param {String} path\r\n * @return {Array}\r\n */\n\nfunction parse(path) {\n  var data = [];\n  path.replace(segment, function (_, command, args) {\n    var type = command.toLowerCase();\n    args = parseValues(args);\n\n    // overloaded moveTo\n    if (type === 'm' && args.length > 2) {\n      data.push([command].concat(args.splice(0, 2)));\n      type = 'l';\n      command = command === 'm' ? 'l' : 'L';\n    }\n\n    while (true) {\n      if (args.length === length[type]) {\n        args.unshift(command);\n        return data.push(args);\n      }\n      if (args.length < length[type]) throw new Error('malformed path data');\n      data.push([command].concat(args.splice(0, length[type])));\n    }\n  });\n  return data;\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig;\n\nfunction parseValues(args) {\n  var numbers = args.match(number);\n  return numbers ? numbers.map(Number) : [];\n}\n\nexports.default = parse;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n// https://github.com/colinmeinke/svg-arc-to-cubic-bezier\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  var a = 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  var umag = Math.sqrt(ux * ux + uy * uy);\n  var vmag = Math.sqrt(ux * ux + uy * uy);\n  var dot = ux * vx + uy * vy;\n\n  var div = dot / (umag * vmag);\n\n  if (div > 1) {\n    div = 1;\n  }\n\n  if (div < -1) {\n    div = -1;\n  }\n\n  return sign * Math.acos(div);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  var segments = Math.max(Math.ceil(Math.abs(ang2) / (TAU / 4)), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexports.default = arcToBezier;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _group = __webpack_require__(1);\n\nvar _group2 = _interopRequireDefault(_group);\n\nvar _text = __webpack_require__(5);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _roundedRect = __webpack_require__(15);\n\nvar _roundedRect2 = _interopRequireDefault(_roundedRect);\n\nvar _bitmap2 = __webpack_require__(2);\n\nvar _bitmap3 = _interopRequireDefault(_bitmap2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\r\nOptions\r\n  font:\r\n  text: \r\n  textColor:\r\n  image: [path, width, height]\r\n  bgColor: \r\n  bgImage: [path, width, height]\r\n  borderRadius:\r\n  borderColor:\r\n*/\n\nvar Button = function (_Group) {\n  _inherits(Button, _Group);\n\n  function Button(option) {\n    _classCallCheck(this, Button);\n\n    var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this));\n\n    _this.width = option.width;\n    _this.height = option.height;\n    _this.x = option.x;\n    _this.y = option.y;\n\n    var textHeight = 0;\n    var textGroup;\n\n    if (option.text) {\n      textGroup = new _group2.default();\n      _this.text = new _text2.default(option.text, {\n        font: option.font,\n        color: option.color\n      });\n      var textWidth = _this.text.getWidth();\n\n      if (textWidth > option.width) {\n        var step = Math.round(option.text.length * option.width / textWidth / 2);\n\n        var textList = _this.stringSplit(option.text, step);\n        var lineHeight = option.lineHeight || 12;\n        textHeight = textList.length * lineHeight + 6;\n\n        textList.forEach(function (text, index) {\n          _this.text = new _text2.default(text, {\n            font: option.font,\n            color: option.color\n          });\n\n          _this.text.x = option.width / 2 - _this.text.getWidth() / 2 * _this.text.scaleX + (option.textX || 0);\n          _this.text.y = Math.max(textHeight, option.height) / 2 - 10 + 5 * _this.text.scaleY + (option.textY || 0) + index * 12 - textHeight / 2 + lineHeight / 2;\n          textGroup.add(_this.text);\n        });\n      } else {\n        _this.text.x = option.width / 2 - _this.text.getWidth() / 2 * _this.text.scaleX + (option.textX || 0);\n        _this.text.y = option.height / 2 - 10 + 5 * _this.text.scaleY + (option.textY || 0);\n        textGroup.add(_this.text);\n      }\n    }\n\n    if (option.bgImage) {\n      var ratio = SCALE_RATIO;\n      var bitmap = new _bitmap3.default(option.bgImage[0]);\n      bitmap.scaleX = ratio;\n      bitmap.scaleY = ratio;\n      bitmap.width = option.bgImage[1];\n      bitmap.height = option.bgImage[2];\n      bitmap.x = (_this.width - bitmap.width) / 2;\n      bitmap.y = (_this.height - bitmap.height) / 2;\n      _this.add(bitmap);\n    } else if (option.bgColor || option.borderColor) {\n      _this.roundedRect = new _roundedRect2.default(option.width, option.autoHeight ? Math.max(textHeight, option.height) : option.height, option.borderRadius, {\n        strokeStyle: option.borderColor || 'black',\n        fillStyle: option.backgroundColor || '#F5F5F5'\n      });\n      _this.add(_this.roundedRect);\n    }\n\n    if (option.image) {\n      var ratio = SCALE_RATIO;\n      var _bitmap = new _bitmap3.default(option.image[0]);\n      _bitmap.scaleX = ratio;\n      _bitmap.scaleY = ratio;\n      _bitmap.width = option.image[1];\n      _bitmap.height = option.image[2];\n      _bitmap.x = (_this.width - _bitmap.width) / 2;\n      _bitmap.y = (_this.height - _bitmap.height) / 2;\n      _this.add(_bitmap);\n    }\n\n    if (textGroup) {\n      _this.add(textGroup);\n    }\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: 'stringSplit',\n    value: function stringSplit(str, len) {\n      var arr = [],\n          offset = 0,\n          char_length = 0;\n      for (var i = 0; i < str.length; i++) {\n        var son_str = str.charAt(i);\n        encodeURI(son_str).length > 2 ? char_length += 1 : char_length += 0.5;\n        if (char_length >= len || char_length < len && i === str.length - 1) {\n          var sub_len = char_length == len ? i + 1 : i;\n          arr.push(str.substr(offset, sub_len - offset + (char_length < len && i === str.length - 1 ? 1 : 0)));\n          offset = i + 1;\n          char_length = 0;\n        }\n      }\n      return arr;\n    }\n  }]);\n\n  return Button;\n}(_group2.default);\n\nexports.default = Button;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Rect = function (_Shape) {\n  _inherits(Rect, _Shape);\n\n  function Rect(width, height, option) {\n    _classCallCheck(this, Rect);\n\n    var _this = _possibleConstructorReturn(this, (Rect.__proto__ || Object.getPrototypeOf(Rect)).call(this));\n\n    _this.width = width;\n    _this.height = height;\n    _this.option = option || {};\n    return _this;\n  }\n\n  _createClass(Rect, [{\n    key: 'draw',\n    value: function draw() {\n      if (this.option.fillStyle) {\n        this.fillStyle(this.option.fillStyle);\n        this.fillRect(0, 0, this.width, this.height);\n      }\n\n      if (this.option.strokeStyle) {\n        this.strokeStyle(this.option.strokeStyle);\n        this.strokeRect(0, 0, this.width, this.height);\n      }\n    }\n  }]);\n\n  return Rect;\n}(_shape2.default);\n\nexports.default = Rect;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Circle = function (_Shape) {\n  _inherits(Circle, _Shape);\n\n  function Circle(r, option) {\n    _classCallCheck(this, Circle);\n\n    var _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this));\n\n    _this.option = option || {};\n    _this.r = r;\n\n    _this._dp = Math.PI * 2;\n    return _this;\n  }\n\n  _createClass(Circle, [{\n    key: 'draw',\n    value: function draw() {\n      this.beginPath();\n      this.arc(0, 0, this.r, 0, this._dp, false);\n\n      if (this.option.strokeStyle) {\n        if (this.option.lineWidth !== undefined) {\n          this.lineWidth(this.option.lineWidth);\n        }\n        this.strokeStyle(this.option.strokeStyle);\n        this.stroke();\n      }\n\n      if (this.option.fillStyle) {\n        this.fillStyle(this.option.fillStyle);\n        this.fill();\n      }\n    }\n  }]);\n\n  return Circle;\n}(_shape2.default);\n\nexports.default = Circle;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Polygon = function (_Shape) {\n  _inherits(Polygon, _Shape);\n\n  function Polygon(vertex, options) {\n    _classCallCheck(this, Polygon);\n\n    var _this = _possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).call(this));\n\n    _this.vertex = vertex || [];\n    _this.options = options || {};\n    _this.strokeColor = _this.options.strokeColor;\n    _this.fillColor = _this.options.fillColor;\n    return _this;\n  }\n\n  _createClass(Polygon, [{\n    key: 'draw',\n    value: function draw() {\n      this.clear().beginPath();\n      this.strokeStyle(this.strokeColor);\n      this.moveTo(this.vertex[0][0], this.vertex[0][1]);\n\n      for (var i = 1, len = this.vertex.length; i < len; i++) {\n        this.lineTo(this.vertex[i][0], this.vertex[i][1]);\n      }\n      this.closePath();\n      // 路径闭合\n      //  if (this.options.strokeStyle) {\n      //    this.strokeStyle = strokeStyle;\n      // this.lineWidth(this.options.width);\n      // this.lineJoin('round');\n      // this.stroke();\n      //  }\n      if (this.strokeColor) {\n        this.strokeStyle(this.strokeColor);\n        this.stroke();\n      }\n      if (this.fillColor) {\n        this.fillStyle(this.fillColor);\n        this.fill();\n      }\n    }\n  }]);\n\n  return Polygon;\n}(_shape2.default);\n\nexports.default = Polygon;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shape = __webpack_require__(0);\n\nvar _shape2 = _interopRequireDefault(_shape);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EquilateralPolygon = function (_Shape) {\n  _inherits(EquilateralPolygon, _Shape);\n\n  function EquilateralPolygon(num, r, options) {\n    _classCallCheck(this, EquilateralPolygon);\n\n    var _this = _possibleConstructorReturn(this, (EquilateralPolygon.__proto__ || Object.getPrototypeOf(EquilateralPolygon)).call(this));\n\n    _this.num = num;\n    _this.r = r;\n    _this.options = options || {};\n\n    _this.vertex = [];\n    _this.initVertex();\n    return _this;\n  }\n\n  _createClass(EquilateralPolygon, [{\n    key: 'initVertex',\n    value: function initVertex() {\n      this.vertex.length = [];\n      var num = this.num;\n      var r = this.r;\n      var i = void 0,\n          startX = void 0,\n          startY = void 0,\n          newX = void 0,\n          newY = void 0;\n\n      if (num % 2 === 0) {\n        startX = r * Math.cos(2 * Math.PI * 0 / num);\n        startY = r * Math.sin(2 * Math.PI * 0 / num);\n\n        this.vertex.push([startX, startY]);\n        for (i = 1; i < num; i++) {\n          newX = r * Math.cos(2 * Math.PI * i / num);\n          newY = r * Math.sin(2 * Math.PI * i / num);\n\n          this.vertex.push([newX, newY]);\n        }\n      } else {\n        startX = r * Math.cos(2 * Math.PI * 0 / num - Math.PI / 2);\n        startY = r * Math.sin(2 * Math.PI * 0 / num - Math.PI / 2);\n\n        this.vertex.push([startX, startY]);\n        for (i = 1; i < num; i++) {\n          newX = r * Math.cos(2 * Math.PI * i / num - Math.PI / 2);\n          newY = r * Math.sin(2 * Math.PI * i / num - Math.PI / 2);\n\n          this.vertex.push([newX, newY]);\n        }\n      }\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      this.beginPath();\n\n      this.moveTo(this.vertex[0][0], this.vertex[0][1]);\n\n      for (var i = 1, len = this.vertex.length; i < len; i++) {\n        this.lineTo(this.vertex[i][0], this.vertex[i][1]);\n      }\n      this.closePath();\n\n      if (this.options.fillStyle) {\n        this.fillStyle(this.options.fillStyle);\n        this.fill();\n      }\n\n      if (this.options.strokeStyle) {\n        this.strokeStyle(this.options.strokeStyle);\n        if (typeof this.options.lineWidth === 'number') {\n          this.lineWidth(this.options.lineWidth);\n        }\n        this.stroke();\n      }\n    }\n  }]);\n\n  return EquilateralPolygon;\n}(_shape2.default);\n\nexports.default = EquilateralPolygon;\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.1.2.9@cax/dist/cax.js\n");

/***/ }),

/***/ "./src/bird.js":
/*!*********************!*\
  !*** ./src/bird.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _cax = __webpack_require__(/*! cax */ \"./node_modules/.1.2.9@cax/dist/cax.js\");\n\nvar _cax2 = _interopRequireDefault(_cax);\n\nvar _vector = __webpack_require__(/*! ./vector */ \"./src/vector.js\");\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Bird = (_temp = _class = function (_cax$Group) {\n  _inherits(Bird, _cax$Group);\n\n  function Bird() {\n    var mass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    _classCallCheck(this, Bird);\n\n    var _this = _possibleConstructorReturn(this, (Bird.__proto__ || Object.getPrototypeOf(Bird)).call(this));\n\n    _this.polygon = new _cax2.default.Graphics();\n    _this.polygon.fillStyle('hsl(' + (0 + Math.random() * 30) + ',75%,75%)').beginPath().moveTo(10, 0).lineTo(-10, 8).lineTo(-10, -8).lineTo(10, 0).closePath().fill();\n\n    _this.add(_this.polygon);\n\n    _this.po = new _vector2.default();\n    _this.ve = new _vector2.default();\n    _this.ac = new _vector2.default();\n\n    _this.mass = mass;\n\n    return _this;\n  }\n\n  _createClass(Bird, [{\n    key: 'update',\n    value: function update(stage, birds) {\n      var _this2 = this;\n\n      birds = birds.filter(function (o) {\n        return _this2 != o;\n      });\n\n      // separation\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = birds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var bird = _step.value;\n\n          if (this.po.distanceTo(bird.po) < Bird.sDist) {\n\n            this.ac.sub(bird.po.clone().sub(this.po).normalize().multiplyScalar(Bird.MAX_SPEED).sub(this.ve));\n          }\n        }\n\n        // cohesion\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var cohesion = birds.reduce(function (param, b) {\n        if (_this2.po.distanceTo(b.po) < Bird.cDist) {\n          param.sum.add(b.po);\n          param.count++;\n        }\n        return param;\n      }, { sum: new _vector2.default(), count: 0, force: new _vector2.default() });\n\n      if (cohesion.count > 0) {\n\n        this.ac.add(cohesion.sum.divideScalar(cohesion.count).sub(this.po).normalize().multiplyScalar(Bird.MAX_SPEED).sub(this.ve));\n      }\n\n      // alignment\n      var alignment = birds.reduce(function (param, b) {\n        if (_this2.po.distanceTo(b.po) < Bird.aDist) {\n          param.sum.add(b.ve);\n          param.count++;\n        }\n        return param;\n      }, { sum: new _vector2.default(), count: 0, force: new _vector2.default() });\n\n      if (alignment.count > 0) {\n        this.ac.add(alignment.sum.divideScalar(alignment.count).normalize().multiplyScalar(Bird.MAX_SPEED).sub(this.ve));\n      }\n\n      if (this.ac.length > Bird.MAX_FORCE) this.ac.normalize().multiplyScalar(Bird.MAX_FORCE);\n      if (this.ve.length > Bird.MAX_SPEED) this.ve.normalize().multiplyScalar(Bird.MAX_SPEED);\n\n      this.ve.add(this.ac.divideScalar(this.mass));\n      this.po.add(this.ve);\n\n      this.polygon.x = this.po.x;\n      this.polygon.y = this.po.y;\n      this.polygon.rotation = this.ve.angle / Math.PI * 180;\n\n      if (this.po.x > stage.width) {\n        this.po.x = stage.width;\n        this.ve.x *= -1;\n      } else if (this.po.x < 0) {\n        this.po.x = 0;\n        this.ve.x *= -1;\n      }\n\n      if (this.po.y > stage.height) {\n        this.po.y = stage.height;\n        this.ve.y *= -1;\n      } else if (this.po.y < 0) {\n        this.po.y = 0;\n        this.ve.y *= -1;\n      }\n    }\n  }]);\n\n  return Bird;\n}(_cax2.default.Group), _class.MAX_SPEED = 5, _class.MAX_FORCE = .1, _class.sDist = 18, _class.cDist = 80, _class.aDist = 60, _temp);\nexports.default = Bird;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmlyZC5qcz82OTk1Il0sIm5hbWVzIjpbIkJpcmQiLCJtYXNzIiwicG9seWdvbiIsIkdyYXBoaWNzIiwiZmlsbFN0eWxlIiwiTWF0aCIsInJhbmRvbSIsImJlZ2luUGF0aCIsIm1vdmVUbyIsImxpbmVUbyIsImNsb3NlUGF0aCIsImZpbGwiLCJhZGQiLCJwbyIsInZlIiwiYWMiLCJzdGFnZSIsImJpcmRzIiwiZmlsdGVyIiwibyIsImJpcmQiLCJkaXN0YW5jZVRvIiwic0Rpc3QiLCJzdWIiLCJjbG9uZSIsIm5vcm1hbGl6ZSIsIm11bHRpcGx5U2NhbGFyIiwiTUFYX1NQRUVEIiwiY29oZXNpb24iLCJyZWR1Y2UiLCJwYXJhbSIsImIiLCJjRGlzdCIsInN1bSIsImNvdW50IiwiZm9yY2UiLCJkaXZpZGVTY2FsYXIiLCJhbGlnbm1lbnQiLCJhRGlzdCIsImxlbmd0aCIsIk1BWF9GT1JDRSIsIngiLCJ5Iiwicm90YXRpb24iLCJhbmdsZSIsIlBJIiwid2lkdGgiLCJoZWlnaHQiLCJHcm91cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFDcUJBLEk7OztBQVFuQixrQkFBbUI7QUFBQSxRQUFQQyxJQUFPLHVFQUFGLENBQUU7O0FBQUE7O0FBQUE7O0FBRWpCLFVBQUtDLE9BQUwsR0FBZSxJQUFJLGNBQUlDLFFBQVIsRUFBZjtBQUNBLFVBQUtELE9BQUwsQ0FDQ0UsU0FERCxXQUNrQixJQUFFQyxLQUFLQyxNQUFMLEtBQWMsRUFEbEMsaUJBRUNDLFNBRkQsR0FHQ0MsTUFIRCxDQUdRLEVBSFIsRUFHWSxDQUhaLEVBSUNDLE1BSkQsQ0FJUSxDQUFDLEVBSlQsRUFJYSxDQUpiLEVBS0NBLE1BTEQsQ0FLUSxDQUFDLEVBTFQsRUFLYSxDQUFDLENBTGQsRUFNQ0EsTUFORCxDQU1RLEVBTlIsRUFNWSxDQU5aLEVBT0NDLFNBUEQsR0FRQ0MsSUFSRDs7QUFVQSxVQUFLQyxHQUFMLENBQVMsTUFBS1YsT0FBZDs7QUFFQSxVQUFLVyxFQUFMLEdBQVUsc0JBQVY7QUFDQSxVQUFLQyxFQUFMLEdBQVUsc0JBQVY7QUFDQSxVQUFLQyxFQUFMLEdBQVUsc0JBQVY7O0FBRUEsVUFBS2QsSUFBTCxHQUFZQSxJQUFaOztBQW5CaUI7QUFxQmxCOzs7OzJCQUNNZSxLLEVBQU9DLEssRUFBTTtBQUFBOztBQUVsQkEsY0FBUUEsTUFBTUMsTUFBTixDQUFhO0FBQUEsZUFBRyxVQUFNQyxDQUFUO0FBQUEsT0FBYixDQUFSOztBQUVBO0FBSmtCO0FBQUE7QUFBQTs7QUFBQTtBQUtsQiw2QkFBZ0JGLEtBQWhCLDhIQUFzQjtBQUFBLGNBQWRHLElBQWM7O0FBQ3BCLGNBQUcsS0FBS1AsRUFBTCxDQUFRUSxVQUFSLENBQW1CRCxLQUFLUCxFQUF4QixJQUE4QmIsS0FBS3NCLEtBQXRDLEVBQTRDOztBQUUxQyxpQkFBS1AsRUFBTCxDQUFRUSxHQUFSLENBQ0VILEtBQUtQLEVBQUwsQ0FBUVcsS0FBUixHQUNDRCxHQURELENBQ0ssS0FBS1YsRUFEVixFQUNjWSxTQURkLEdBRUNDLGNBRkQsQ0FFZ0IxQixLQUFLMkIsU0FGckIsRUFHQ0osR0FIRCxDQUdLLEtBQUtULEVBSFYsQ0FERjtBQU1EO0FBQ0Y7O0FBRUQ7QUFqQmtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBa0JsQixVQUFJYyxXQUFZWCxNQUFNWSxNQUFOLENBQWEsVUFBQ0MsS0FBRCxFQUFRQyxDQUFSLEVBQVk7QUFDdkMsWUFBRyxPQUFLbEIsRUFBTCxDQUFRUSxVQUFSLENBQW1CVSxFQUFFbEIsRUFBckIsSUFBMkJiLEtBQUtnQyxLQUFuQyxFQUF5QztBQUN2Q0YsZ0JBQU1HLEdBQU4sQ0FBVXJCLEdBQVYsQ0FBY21CLEVBQUVsQixFQUFoQjtBQUNBaUIsZ0JBQU1JLEtBQU47QUFDRDtBQUNELGVBQU9KLEtBQVA7QUFDRCxPQU5lLEVBTWQsRUFBQ0csS0FBSSxzQkFBTCxFQUFrQkMsT0FBTSxDQUF4QixFQUEwQkMsT0FBTSxzQkFBaEMsRUFOYyxDQUFoQjs7QUFRQSxVQUFHUCxTQUFTTSxLQUFULEdBQWUsQ0FBbEIsRUFBb0I7O0FBRWxCLGFBQUtuQixFQUFMLENBQVFILEdBQVIsQ0FDRWdCLFNBQVNLLEdBQVQsQ0FBYUcsWUFBYixDQUEwQlIsU0FBU00sS0FBbkMsRUFDQ1gsR0FERCxDQUNLLEtBQUtWLEVBRFYsRUFDY1ksU0FEZCxHQUVDQyxjQUZELENBRWdCMUIsS0FBSzJCLFNBRnJCLEVBR0NKLEdBSEQsQ0FHSyxLQUFLVCxFQUhWLENBREY7QUFNRDs7QUFHRDtBQUNBLFVBQUl1QixZQUFhcEIsTUFBTVksTUFBTixDQUFhLFVBQUNDLEtBQUQsRUFBUUMsQ0FBUixFQUFZO0FBQ3hDLFlBQUcsT0FBS2xCLEVBQUwsQ0FBUVEsVUFBUixDQUFtQlUsRUFBRWxCLEVBQXJCLElBQTJCYixLQUFLc0MsS0FBbkMsRUFBeUM7QUFDdkNSLGdCQUFNRyxHQUFOLENBQVVyQixHQUFWLENBQWNtQixFQUFFakIsRUFBaEI7QUFDQWdCLGdCQUFNSSxLQUFOO0FBQ0Q7QUFDRCxlQUFPSixLQUFQO0FBQ0QsT0FOZ0IsRUFNZixFQUFDRyxLQUFJLHNCQUFMLEVBQWtCQyxPQUFNLENBQXhCLEVBQTBCQyxPQUFNLHNCQUFoQyxFQU5lLENBQWpCOztBQVFBLFVBQUdFLFVBQVVILEtBQVYsR0FBZ0IsQ0FBbkIsRUFBcUI7QUFDbkIsYUFBS25CLEVBQUwsQ0FBUUgsR0FBUixDQUNFeUIsVUFBVUosR0FBVixDQUFjRyxZQUFkLENBQTJCQyxVQUFVSCxLQUFyQyxFQUE0Q1QsU0FBNUMsR0FDQ0MsY0FERCxDQUNnQjFCLEtBQUsyQixTQURyQixFQUNnQ0osR0FEaEMsQ0FDb0MsS0FBS1QsRUFEekMsQ0FERjtBQUlEOztBQUdELFVBQUcsS0FBS0MsRUFBTCxDQUFRd0IsTUFBUixHQUFpQnZDLEtBQUt3QyxTQUF6QixFQUFvQyxLQUFLekIsRUFBTCxDQUFRVSxTQUFSLEdBQW9CQyxjQUFwQixDQUFtQzFCLEtBQUt3QyxTQUF4QztBQUNwQyxVQUFHLEtBQUsxQixFQUFMLENBQVF5QixNQUFSLEdBQWlCdkMsS0FBSzJCLFNBQXpCLEVBQW9DLEtBQUtiLEVBQUwsQ0FBUVcsU0FBUixHQUFvQkMsY0FBcEIsQ0FBbUMxQixLQUFLMkIsU0FBeEM7O0FBRXBDLFdBQUtiLEVBQUwsQ0FBUUYsR0FBUixDQUFZLEtBQUtHLEVBQUwsQ0FBUXFCLFlBQVIsQ0FBcUIsS0FBS25DLElBQTFCLENBQVo7QUFDQSxXQUFLWSxFQUFMLENBQVFELEdBQVIsQ0FBWSxLQUFLRSxFQUFqQjs7QUFFQSxXQUFLWixPQUFMLENBQWF1QyxDQUFiLEdBQWlCLEtBQUs1QixFQUFMLENBQVE0QixDQUF6QjtBQUNBLFdBQUt2QyxPQUFMLENBQWF3QyxDQUFiLEdBQWlCLEtBQUs3QixFQUFMLENBQVE2QixDQUF6QjtBQUNBLFdBQUt4QyxPQUFMLENBQWF5QyxRQUFiLEdBQXdCLEtBQUs3QixFQUFMLENBQVE4QixLQUFSLEdBQWN2QyxLQUFLd0MsRUFBbkIsR0FBc0IsR0FBOUM7O0FBRUEsVUFBRyxLQUFLaEMsRUFBTCxDQUFRNEIsQ0FBUixHQUFZekIsTUFBTThCLEtBQXJCLEVBQTJCO0FBQ3pCLGFBQUtqQyxFQUFMLENBQVE0QixDQUFSLEdBQVl6QixNQUFNOEIsS0FBbEI7QUFDQSxhQUFLaEMsRUFBTCxDQUFRMkIsQ0FBUixJQUFhLENBQUMsQ0FBZDtBQUNELE9BSEQsTUFHTyxJQUFHLEtBQUs1QixFQUFMLENBQVE0QixDQUFSLEdBQVksQ0FBZixFQUFpQjtBQUN0QixhQUFLNUIsRUFBTCxDQUFRNEIsQ0FBUixHQUFZLENBQVo7QUFDQSxhQUFLM0IsRUFBTCxDQUFRMkIsQ0FBUixJQUFhLENBQUMsQ0FBZDtBQUNEOztBQUVELFVBQUcsS0FBSzVCLEVBQUwsQ0FBUTZCLENBQVIsR0FBWTFCLE1BQU0rQixNQUFyQixFQUE0QjtBQUMxQixhQUFLbEMsRUFBTCxDQUFRNkIsQ0FBUixHQUFZMUIsTUFBTStCLE1BQWxCO0FBQ0EsYUFBS2pDLEVBQUwsQ0FBUTRCLENBQVIsSUFBYSxDQUFDLENBQWQ7QUFFRCxPQUpELE1BSU8sSUFBRyxLQUFLN0IsRUFBTCxDQUFRNkIsQ0FBUixHQUFZLENBQWYsRUFBaUI7QUFDdEIsYUFBSzdCLEVBQUwsQ0FBUTZCLENBQVIsR0FBWSxDQUFaO0FBQ0EsYUFBSzVCLEVBQUwsQ0FBUTRCLENBQVIsSUFBYSxDQUFDLENBQWQ7QUFDRDtBQUVGOzs7O0VBL0crQixjQUFJTSxLLFVBRTdCckIsUyxHQUFZLEMsU0FDWmEsUyxHQUFZLEUsU0FDWmxCLEssR0FBUSxFLFNBQ1JVLEssR0FBUSxFLFNBQ1JNLEssR0FBUSxFO2tCQU5JdEMsSSIsImZpbGUiOiIuL3NyYy9iaXJkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNheCBmcm9tICdjYXgnXHJcbmltcG9ydCBWZWN0b3IgZnJvbSAnLi92ZWN0b3InXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJpcmQgZXh0ZW5kcyBjYXguR3JvdXB7XHJcblxyXG4gIHN0YXRpYyBNQVhfU1BFRUQgPSA1XHJcbiAgc3RhdGljIE1BWF9GT1JDRSA9IC4xXHJcbiAgc3RhdGljIHNEaXN0ID0gMThcclxuICBzdGF0aWMgY0Rpc3QgPSA4MFxyXG4gIHN0YXRpYyBhRGlzdCA9IDYwXHJcblxyXG4gIGNvbnN0cnVjdG9yKG1hc3M9MSl7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLnBvbHlnb24gPSBuZXcgY2F4LkdyYXBoaWNzKClcclxuICAgIHRoaXMucG9seWdvblxyXG4gICAgLmZpbGxTdHlsZShgaHNsKCR7MCtNYXRoLnJhbmRvbSgpKjMwfSw3NSUsNzUlKWApXHJcbiAgICAuYmVnaW5QYXRoKClcclxuICAgIC5tb3ZlVG8oMTAsIDApXHJcbiAgICAubGluZVRvKC0xMCwgOClcclxuICAgIC5saW5lVG8oLTEwLCAtOClcclxuICAgIC5saW5lVG8oMTAsIDApXHJcbiAgICAuY2xvc2VQYXRoKClcclxuICAgIC5maWxsKClcclxuXHJcbiAgICB0aGlzLmFkZCh0aGlzLnBvbHlnb24pXHJcblxyXG4gICAgdGhpcy5wbyA9IG5ldyBWZWN0b3IoKVxyXG4gICAgdGhpcy52ZSA9IG5ldyBWZWN0b3IoKVxyXG4gICAgdGhpcy5hYyA9IG5ldyBWZWN0b3IoKVxyXG5cclxuICAgIHRoaXMubWFzcyA9IG1hc3NcclxuXHJcbiAgfVxyXG4gIHVwZGF0ZShzdGFnZSwgYmlyZHMpe1xyXG5cclxuICAgIGJpcmRzID0gYmlyZHMuZmlsdGVyKG89PnRoaXMhPW8pXHJcblxyXG4gICAgLy8gc2VwYXJhdGlvblxyXG4gICAgZm9yKGxldCBiaXJkIG9mIGJpcmRzKXtcclxuICAgICAgaWYodGhpcy5wby5kaXN0YW5jZVRvKGJpcmQucG8pIDwgQmlyZC5zRGlzdCl7XHJcblxyXG4gICAgICAgIHRoaXMuYWMuc3ViKFxyXG4gICAgICAgICAgYmlyZC5wby5jbG9uZSgpXHJcbiAgICAgICAgICAuc3ViKHRoaXMucG8pLm5vcm1hbGl6ZSgpXHJcbiAgICAgICAgICAubXVsdGlwbHlTY2FsYXIoQmlyZC5NQVhfU1BFRUQpXHJcbiAgICAgICAgICAuc3ViKHRoaXMudmUpXHJcbiAgICAgICAgKVxyXG4gICAgICB9IFxyXG4gICAgfVxyXG4gICAgICBcclxuICAgIC8vIGNvaGVzaW9uXHJcbiAgICBsZXQgY29oZXNpb24gPSAgYmlyZHMucmVkdWNlKChwYXJhbSwgYik9PntcclxuICAgICAgaWYodGhpcy5wby5kaXN0YW5jZVRvKGIucG8pIDwgQmlyZC5jRGlzdCl7XHJcbiAgICAgICAgcGFyYW0uc3VtLmFkZChiLnBvKVxyXG4gICAgICAgIHBhcmFtLmNvdW50KytcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcGFyYW1cclxuICAgIH0se3N1bTpuZXcgVmVjdG9yKCksY291bnQ6MCxmb3JjZTpuZXcgVmVjdG9yKCl9KVxyXG5cclxuICAgIGlmKGNvaGVzaW9uLmNvdW50PjApe1xyXG5cclxuICAgICAgdGhpcy5hYy5hZGQoXHJcbiAgICAgICAgY29oZXNpb24uc3VtLmRpdmlkZVNjYWxhcihjb2hlc2lvbi5jb3VudClcclxuICAgICAgICAuc3ViKHRoaXMucG8pLm5vcm1hbGl6ZSgpXHJcbiAgICAgICAgLm11bHRpcGx5U2NhbGFyKEJpcmQuTUFYX1NQRUVEKVxyXG4gICAgICAgIC5zdWIodGhpcy52ZSlcclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyBhbGlnbm1lbnRcclxuICAgIGxldCBhbGlnbm1lbnQgPSAgYmlyZHMucmVkdWNlKChwYXJhbSwgYik9PntcclxuICAgICAgaWYodGhpcy5wby5kaXN0YW5jZVRvKGIucG8pIDwgQmlyZC5hRGlzdCl7XHJcbiAgICAgICAgcGFyYW0uc3VtLmFkZChiLnZlKVxyXG4gICAgICAgIHBhcmFtLmNvdW50KytcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcGFyYW1cclxuICAgIH0se3N1bTpuZXcgVmVjdG9yKCksY291bnQ6MCxmb3JjZTpuZXcgVmVjdG9yKCl9KVxyXG5cclxuICAgIGlmKGFsaWdubWVudC5jb3VudD4wKXtcclxuICAgICAgdGhpcy5hYy5hZGQoXHJcbiAgICAgICAgYWxpZ25tZW50LnN1bS5kaXZpZGVTY2FsYXIoYWxpZ25tZW50LmNvdW50KS5ub3JtYWxpemUoKVxyXG4gICAgICAgIC5tdWx0aXBseVNjYWxhcihCaXJkLk1BWF9TUEVFRCkuc3ViKHRoaXMudmUpIFxyXG4gICAgICApXHJcbiAgICB9XHJcblxyXG5cclxuICAgIGlmKHRoaXMuYWMubGVuZ3RoID4gQmlyZC5NQVhfRk9SQ0UpIHRoaXMuYWMubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIoQmlyZC5NQVhfRk9SQ0UpXHJcbiAgICBpZih0aGlzLnZlLmxlbmd0aCA+IEJpcmQuTUFYX1NQRUVEKSB0aGlzLnZlLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKEJpcmQuTUFYX1NQRUVEKVxyXG5cclxuICAgIHRoaXMudmUuYWRkKHRoaXMuYWMuZGl2aWRlU2NhbGFyKHRoaXMubWFzcykpXHJcbiAgICB0aGlzLnBvLmFkZCh0aGlzLnZlKVxyXG5cclxuICAgIHRoaXMucG9seWdvbi54ID0gdGhpcy5wby54XHJcbiAgICB0aGlzLnBvbHlnb24ueSA9IHRoaXMucG8ueVxyXG4gICAgdGhpcy5wb2x5Z29uLnJvdGF0aW9uID0gdGhpcy52ZS5hbmdsZS9NYXRoLlBJKjE4MFxyXG4gICAgXHJcbiAgICBpZih0aGlzLnBvLnggPiBzdGFnZS53aWR0aCl7XHJcbiAgICAgIHRoaXMucG8ueCA9IHN0YWdlLndpZHRoXHJcbiAgICAgIHRoaXMudmUueCAqPSAtMVxyXG4gICAgfSBlbHNlIGlmKHRoaXMucG8ueCA8IDApe1xyXG4gICAgICB0aGlzLnBvLnggPSAwXHJcbiAgICAgIHRoaXMudmUueCAqPSAtMVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZih0aGlzLnBvLnkgPiBzdGFnZS5oZWlnaHQpe1xyXG4gICAgICB0aGlzLnBvLnkgPSBzdGFnZS5oZWlnaHRcclxuICAgICAgdGhpcy52ZS55ICo9IC0xXHJcblxyXG4gICAgfSBlbHNlIGlmKHRoaXMucG8ueSA8IDApe1xyXG4gICAgICB0aGlzLnBvLnkgPSAwXHJcbiAgICAgIHRoaXMudmUueSAqPSAtMVxyXG4gICAgfVxyXG5cclxuICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/bird.js\n");

/***/ }),

/***/ "./src/flocking.js":
/*!*************************!*\
  !*** ./src/flocking.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Flocking;\n\nvar _bird = __webpack_require__(/*! ./bird */ \"./src/bird.js\");\n\nvar _bird2 = _interopRequireDefault(_bird);\n\nvar _vector = __webpack_require__(/*! ./vector */ \"./src/vector.js\");\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// debugger\nfunction Flocking(stage) {\n  exports.default = Flocking = {\n    update: function update() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.birds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var bird = _step.value;\n          bird.update(stage, this.birds);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    birds: [],\n    initial: function initial() {\n      var rd = Math.random;\n      this.birds = Array.from({ length: 70 }, function (v, i) {\n        var bird = new _bird2.default();\n        stage.add(bird);\n        //bird.po =\n        Object.assign(bird, {\n          po: new _vector2.default(stage.width * rd(), stage.height * rd()),\n          ve: new _vector2.default(Math.random() * 20 - 10, Math.random() * 20 - 10),\n          ac: new _vector2.default(),\n          mass: 1\n        });\n\n        return bird;\n      });\n    }\n  };\n  Flocking.initial();\n  return Flocking;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmxvY2tpbmcuanM/NTIwNiJdLCJuYW1lcyI6WyJGbG9ja2luZyIsInN0YWdlIiwidXBkYXRlIiwiYmlyZHMiLCJiaXJkIiwiaW5pdGlhbCIsInJkIiwiTWF0aCIsInJhbmRvbSIsIkFycmF5IiwiZnJvbSIsImxlbmd0aCIsInYiLCJpIiwiYWRkIiwiT2JqZWN0IiwiYXNzaWduIiwicG8iLCJ3aWR0aCIsImhlaWdodCIsInZlIiwiYWMiLCJtYXNzIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFJd0JBLFE7O0FBSnhCOzs7O0FBQ0E7Ozs7OztBQUVBO0FBQ2UsU0FBU0EsUUFBVCxDQUFrQkMsS0FBbEIsRUFBd0I7QUFDckMsK0JBQVc7QUFDVEMsVUFEUyxvQkFDRDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUNOLDZCQUFnQixLQUFLQyxLQUFyQjtBQUFBLGNBQVFDLElBQVI7QUFBNEJBLGVBQUtGLE1BQUwsQ0FBWUQsS0FBWixFQUFtQixLQUFLRSxLQUF4QjtBQUE1QjtBQURNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHUCxLQUpRO0FBS1JBLFdBQU8sRUFMQztBQU1SRSxXQU5RLHFCQU1DO0FBQ1IsVUFBSUMsS0FBS0MsS0FBS0MsTUFBZDtBQUNBLFdBQUtMLEtBQUwsR0FBYU0sTUFBTUMsSUFBTixDQUFXLEVBQUNDLFFBQU8sRUFBUixFQUFYLEVBQXVCLFVBQUNDLENBQUQsRUFBR0MsQ0FBSCxFQUFPO0FBQ3pDLFlBQUlULE9BQU8sb0JBQVg7QUFDQUgsY0FBTWEsR0FBTixDQUFVVixJQUFWO0FBQ0E7QUFDQVcsZUFBT0MsTUFBUCxDQUFjWixJQUFkLEVBQW1CO0FBQ2pCYSxjQUFJLHFCQUFXaEIsTUFBTWlCLEtBQU4sR0FBWVosSUFBdkIsRUFBNEJMLE1BQU1rQixNQUFOLEdBQWFiLElBQXpDLENBRGE7QUFFaEJjLGNBQUkscUJBQVdiLEtBQUtDLE1BQUwsS0FBZ0IsRUFBaEIsR0FBcUIsRUFBaEMsRUFBb0NELEtBQUtDLE1BQUwsS0FBZ0IsRUFBaEIsR0FBcUIsRUFBekQsQ0FGWTtBQUdoQmEsY0FBSSxzQkFIWTtBQUloQkMsZ0JBQU07QUFKVSxTQUFuQjs7QUFPQSxlQUFPbEIsSUFBUDtBQUNELE9BWlksQ0FBYjtBQWFEO0FBckJRLEdBQVg7QUF1QkFKLFdBQVNLLE9BQVQ7QUFDQSxTQUFPTCxRQUFQO0FBQ0QiLCJmaWxlIjoiLi9zcmMvZmxvY2tpbmcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmlyZCBmcm9tICcuL2JpcmQnXHJcbmltcG9ydCBWZWN0b3IgZnJvbSAnLi92ZWN0b3InXHJcblxyXG4vLyBkZWJ1Z2dlclxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBGbG9ja2luZyhzdGFnZSl7XHJcbiAgRmxvY2tpbmcgPSB7XHJcbiAgICB1cGRhdGUoKXtcclxuICAgICAgZm9yKGxldCBiaXJkIG9mIHRoaXMuYmlyZHMpIGJpcmQudXBkYXRlKHN0YWdlLCB0aGlzLmJpcmRzKVxyXG4gICAgICBcclxuICAgIH1cclxuICAgICxiaXJkczogW11cclxuICAgICxpbml0aWFsKCl7XHJcbiAgICAgIHZhciByZCA9IE1hdGgucmFuZG9tXHJcbiAgICAgIHRoaXMuYmlyZHMgPSBBcnJheS5mcm9tKHtsZW5ndGg6NzB9LCh2LGkpPT57XHJcbiAgICAgICAgdmFyIGJpcmQgPSBuZXcgQmlyZCgpXHJcbiAgICAgICAgc3RhZ2UuYWRkKGJpcmQpXHJcbiAgICAgICAgLy9iaXJkLnBvID1cclxuICAgICAgICBPYmplY3QuYXNzaWduKGJpcmQse1xyXG4gICAgICAgICAgcG86IG5ldyBWZWN0b3Ioc3RhZ2Uud2lkdGgqcmQoKSxzdGFnZS5oZWlnaHQqcmQoKSlcclxuICAgICAgICAgICx2ZTogbmV3IFZlY3RvcihNYXRoLnJhbmRvbSgpICogMjAgLSAxMCwgTWF0aC5yYW5kb20oKSAqIDIwIC0gMTApXHJcbiAgICAgICAgICAsYWM6IG5ldyBWZWN0b3IoKVxyXG4gICAgICAgICAgLG1hc3M6IDFcclxuICAgICAgICB9KSBcclxuXHJcbiAgICAgICAgcmV0dXJuIGJpcmRcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcbiAgRmxvY2tpbmcuaW5pdGlhbCgpXHJcbiAgcmV0dXJuIEZsb2NraW5nXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/flocking.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _cax = __webpack_require__(/*! cax */ \"./node_modules/.1.2.9@cax/dist/cax.js\");\n\nvar _cax2 = _interopRequireDefault(_cax);\n\n__webpack_require__(/*! ./main.less */ \"./src/main.less\");\n\nvar _flocking = __webpack_require__(/*! ./flocking */ \"./src/flocking.js\");\n\nvar _flocking2 = _interopRequireDefault(_flocking);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar stage = new _cax2.default.Stage(document.body.offsetWidth, document.body.offsetHeight, 'body');\n\nvar flocking = (0, _flocking2.default)(stage);\n\n_cax2.default.tick(function () {\n  stage.update();\n  flocking.update(stage);\n  // debugger\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcz81NmQ3Il0sIm5hbWVzIjpbInN0YWdlIiwiU3RhZ2UiLCJkb2N1bWVudCIsImJvZHkiLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImZsb2NraW5nIiwidGljayIsInVwZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOztBQUNBOzs7Ozs7QUFHQSxJQUFJQSxRQUFRLElBQUksY0FBSUMsS0FBUixDQUFjQyxTQUFTQyxJQUFULENBQWNDLFdBQTVCLEVBQXdDRixTQUFTQyxJQUFULENBQWNFLFlBQXRELEVBQW1FLE1BQW5FLENBQVo7O0FBRUEsSUFBSUMsV0FBVyx3QkFBU04sS0FBVCxDQUFmOztBQUVBLGNBQUlPLElBQUosQ0FBUyxZQUFJO0FBQ1hQLFFBQU1RLE1BQU47QUFDQUYsV0FBU0UsTUFBVCxDQUFnQlIsS0FBaEI7QUFDQTtBQUNELENBSkQiLCJmaWxlIjoiLi9zcmMvbWFpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYXggZnJvbSAnY2F4J1xyXG5pbXBvcnQgJy4vbWFpbi5sZXNzJ1xyXG5pbXBvcnQgRmxvY2tpbmcgZnJvbSAnLi9mbG9ja2luZydcclxuXHJcblxyXG52YXIgc3RhZ2UgPSBuZXcgY2F4LlN0YWdlKGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGgsZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQsJ2JvZHknKVxyXG5cclxudmFyIGZsb2NraW5nID0gRmxvY2tpbmcoc3RhZ2UpXHJcblxyXG5jYXgudGljaygoKT0+e1xyXG4gIHN0YWdlLnVwZGF0ZSgpXHJcbiAgZmxvY2tpbmcudXBkYXRlKHN0YWdlKVxyXG4gIC8vIGRlYnVnZ2VyXHJcbn0pIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/main.less":
/*!***********************!*\
  !*** ./src/main.less ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/lib??ref--5-2!../../node_modules/less-loader/dist/cjs.js!./main.less */ \"../node_modules/css-loader/index.js!../node_modules/postcss-loader/lib/index.js??ref--5-2!../node_modules/less-loader/dist/cjs.js!./src/main.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5sZXNzP2E3ODgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi9zcmMvbWFpbi5sZXNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4ubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5sZXNzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/main.less\n");

/***/ }),

/***/ "./src/vector.js":
/*!***********************!*\
  !*** ./src/vector.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// distanceTo\n// add\n// divideScalar\n// sub\n// normalize\n// multiplyScalar\n// length\n\nvar s = Math.sin,\n    c = Math.cos,\n    sqrt = Math.sqrt,\n    pow = Math.pow,\n    PI = Math.PI,\n    atan2 = Math.atan2;\n\nvar Vector = function () {\n  function Vector() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  _createClass(Vector, [{\n    key: \"distanceTo\",\n    value: function distanceTo(v2) {\n\n      return sqrt(pow(this.x - v2.x, 2) + pow(this.y - v2.y, 2) + pow(this.z - v2.z, 2));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Vector(this.x, this.y, this.z);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v2) {\n      this.x += v2.x;\n      this.y += v2.y;\n      this.z += v2.z;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v2) {\n      this.x -= v2.x;\n      this.y -= v2.y;\n      this.z -= v2.z;\n      return this;\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(v) {\n      if (v === 0) v = 1;\n      this.x /= v;\n      this.y /= v;\n      this.z /= v;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(v) {\n      this.x *= v;\n      this.y *= v;\n      this.z *= v;\n      return this;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      // debugger\n      return this.divideScalar(this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return sqrt(pow(this.x, 2) + pow(this.y, 2) + pow(this.z, 2));\n    }\n  }, {\n    key: \"angle\",\n    get: function get() {\n      return atan2(this.y, this.x);\n    }\n  }]);\n\n  return Vector;\n}();\n\nexports.default = Vector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmVjdG9yLmpzPzM0MTMiXSwibmFtZXMiOlsicyIsIk1hdGgiLCJzaW4iLCJjIiwiY29zIiwic3FydCIsInBvdyIsIlBJIiwiYXRhbjIiLCJWZWN0b3IiLCJ4IiwieSIsInoiLCJ2MiIsInYiLCJkaXZpZGVTY2FsYXIiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxJQUFJQyxLQUFLQyxHQUFmO0FBQUEsSUFBb0JDLElBQUlGLEtBQUtHLEdBQTdCO0FBQUEsSUFBa0NDLE9BQU9KLEtBQUtJLElBQTlDO0FBQUEsSUFBb0RDLE1BQU1MLEtBQUtLLEdBQS9EO0FBQUEsSUFBb0VDLEtBQUtOLEtBQUtNLEVBQTlFO0FBQUEsSUFBa0ZDLFFBQVFQLEtBQUtPLEtBQS9GOztJQUNxQkMsTTtBQUNuQixvQkFBd0I7QUFBQSxRQUFaQyxDQUFZLHVFQUFWLENBQVU7QUFBQSxRQUFSQyxDQUFRLHVFQUFOLENBQU07QUFBQSxRQUFKQyxDQUFJLHVFQUFGLENBQUU7O0FBQUE7O0FBQ3RCLFNBQUtGLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNEOzs7OytCQU9VQyxFLEVBQUc7O0FBRVosYUFBT1IsS0FBS0MsSUFBSSxLQUFLSSxDQUFMLEdBQVNHLEdBQUdILENBQWhCLEVBQWtCLENBQWxCLElBQXVCSixJQUFJLEtBQUtLLENBQUwsR0FBT0UsR0FBR0YsQ0FBZCxFQUFnQixDQUFoQixDQUF2QixHQUE0Q0wsSUFBSSxLQUFLTSxDQUFMLEdBQU9DLEdBQUdELENBQWQsRUFBZ0IsQ0FBaEIsQ0FBakQsQ0FBUDtBQUVEOzs7NEJBQ007QUFDTCxhQUFPLElBQUlILE1BQUosQ0FBVyxLQUFLQyxDQUFoQixFQUFrQixLQUFLQyxDQUF2QixFQUF5QixLQUFLQyxDQUE5QixDQUFQO0FBQ0Q7Ozt3QkFDR0MsRSxFQUFHO0FBQ0wsV0FBS0gsQ0FBTCxJQUFVRyxHQUFHSCxDQUFiO0FBQ0EsV0FBS0MsQ0FBTCxJQUFVRSxHQUFHRixDQUFiO0FBQ0EsV0FBS0MsQ0FBTCxJQUFVQyxHQUFHRCxDQUFiO0FBQ0EsYUFBTyxJQUFQO0FBQ0Q7Ozt3QkFDR0MsRSxFQUFHO0FBQ0wsV0FBS0gsQ0FBTCxJQUFVRyxHQUFHSCxDQUFiO0FBQ0EsV0FBS0MsQ0FBTCxJQUFVRSxHQUFHRixDQUFiO0FBQ0EsV0FBS0MsQ0FBTCxJQUFVQyxHQUFHRCxDQUFiO0FBQ0EsYUFBTyxJQUFQO0FBQ0Q7OztpQ0FDWUUsQyxFQUFFO0FBQ2IsVUFBR0EsTUFBTSxDQUFULEVBQVlBLElBQUksQ0FBSjtBQUNaLFdBQUtKLENBQUwsSUFBVUksQ0FBVjtBQUNBLFdBQUtILENBQUwsSUFBVUcsQ0FBVjtBQUNBLFdBQUtGLENBQUwsSUFBVUUsQ0FBVjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7bUNBQ2NBLEMsRUFBRTtBQUNmLFdBQUtKLENBQUwsSUFBVUksQ0FBVjtBQUNBLFdBQUtILENBQUwsSUFBVUcsQ0FBVjtBQUNBLFdBQUtGLENBQUwsSUFBVUUsQ0FBVjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7Z0NBQ1U7QUFDVDtBQUNBLGFBQU8sS0FBS0MsWUFBTCxDQUFrQixLQUFLQyxNQUF2QixDQUFQO0FBQ0Q7Ozt3QkExQ1c7QUFDVixhQUFPWCxLQUFLQyxJQUFJLEtBQUtJLENBQVQsRUFBVyxDQUFYLElBQWNKLElBQUksS0FBS0ssQ0FBVCxFQUFXLENBQVgsQ0FBZCxHQUE0QkwsSUFBSSxLQUFLTSxDQUFULEVBQVcsQ0FBWCxDQUFqQyxDQUFQO0FBQ0Q7Ozt3QkFDVTtBQUNULGFBQU9KLE1BQU0sS0FBS0csQ0FBWCxFQUFjLEtBQUtELENBQW5CLENBQVA7QUFDRDs7Ozs7O2tCQVhrQkQsTSIsImZpbGUiOiIuL3NyYy92ZWN0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gZGlzdGFuY2VUb1xyXG4vLyBhZGRcclxuLy8gZGl2aWRlU2NhbGFyXHJcbi8vIHN1YlxyXG4vLyBub3JtYWxpemVcclxuLy8gbXVsdGlwbHlTY2FsYXJcclxuLy8gbGVuZ3RoXHJcblxyXG5jb25zdCBzID0gTWF0aC5zaW4sIGMgPSBNYXRoLmNvcywgc3FydCA9IE1hdGguc3FydCwgcG93ID0gTWF0aC5wb3csIFBJID0gTWF0aC5QSSwgYXRhbjIgPSBNYXRoLmF0YW4yXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZlY3RvcntcclxuICBjb25zdHJ1Y3Rvcih4PTAseT0wLHo9MCl7XHJcbiAgICB0aGlzLnggPSB4XHJcbiAgICB0aGlzLnkgPSB5XHJcbiAgICB0aGlzLnogPSB6XHJcbiAgfVxyXG4gIGdldCBsZW5ndGgoKXtcclxuICAgIHJldHVybiBzcXJ0KHBvdyh0aGlzLngsMikrcG93KHRoaXMueSwyKStwb3codGhpcy56LDIpKVxyXG4gIH1cclxuICBnZXQgYW5nbGUoKXtcclxuICAgIHJldHVybiBhdGFuMih0aGlzLnksIHRoaXMueClcclxuICB9XHJcbiAgZGlzdGFuY2VUbyh2Mil7XHJcbiAgICBcclxuICAgIHJldHVybiBzcXJ0KHBvdyh0aGlzLnggLSB2Mi54LDIpICsgcG93KHRoaXMueS12Mi55LDIpICsgcG93KHRoaXMuei12Mi56LDIpIClcclxuICAgIFxyXG4gIH1cclxuICBjbG9uZSgpe1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IodGhpcy54LHRoaXMueSx0aGlzLnopXHJcbiAgfVxyXG4gIGFkZCh2Mil7XHJcbiAgICB0aGlzLnggKz0gdjIueFxyXG4gICAgdGhpcy55ICs9IHYyLnlcclxuICAgIHRoaXMueiArPSB2Mi56XHJcbiAgICByZXR1cm4gdGhpc1xyXG4gIH1cclxuICBzdWIodjIpe1xyXG4gICAgdGhpcy54IC09IHYyLnhcclxuICAgIHRoaXMueSAtPSB2Mi55XHJcbiAgICB0aGlzLnogLT0gdjIuelxyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcbiAgZGl2aWRlU2NhbGFyKHYpe1xyXG4gICAgaWYodiA9PT0gMCkgdiA9IDFcclxuICAgIHRoaXMueCAvPSB2XHJcbiAgICB0aGlzLnkgLz0gdlxyXG4gICAgdGhpcy56IC89IHZcclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG4gIG11bHRpcGx5U2NhbGFyKHYpe1xyXG4gICAgdGhpcy54ICo9IHZcclxuICAgIHRoaXMueSAqPSB2XHJcbiAgICB0aGlzLnogKj0gdlxyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcbiAgbm9ybWFsaXplKCl7XHJcbiAgICAvLyBkZWJ1Z2dlclxyXG4gICAgcmV0dXJuIHRoaXMuZGl2aWRlU2NhbGFyKHRoaXMubGVuZ3RoKVxyXG4gIH1cclxuXHJcblxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/vector.js\n");

/***/ })

/******/ });